ROSTemplateFormatVersion: '2015-09-01'
Description:
  zh-cn: 创建物联网规则与动作，支持数据筛选、转发至MNS等服务，涵盖自定义与设备状态主题，可配置错误数据处理。
  en: Create IoT rules and actions, supporting data filtering and forwarding to services
    such as MNS, encompassing custom and device status topics, with configurable error
    data handling.
Parameters:
  Name:
    Type: String
    Description: The name of the rule. The name must be 1 to 30 characters in length
      and can contain English letters, digits, underscores (_), and hyphens (-). Chinese
      language is also supported. Each Chinese symbol occupies 2 characters.
  TopicType:
    Type: Number
    Description: '0: The topic is a basic communication topic or TSL-based communication
      topic. 1: The topic is a custom topic. 2: The topic is used to submit device
      status changes. Syntax: /as/mqtt/status/${productKey}/${deviceName}.'
    Default: 0
  IotInstanceId:
    Type: String
    Description: The ID of the instance. This parameter is not required for public
      instances. However, the parameter is required for the instances that you have
      purchased.
    Default: null
  ResourceGroupId:
    Type: String
    Description: The ID of the resource group to which the rule is assigned. You can
      view the resource group information in the Resource Management console.  If
      you do not specify this parameter, the rule is assigned to the default resource
      group.
    Default: null
  ShortTopic:
    Type: String
    Description: 'The topic to which this rule is applied. Syntax: ${deviceName}/topicShortName.
      ${deviceName}specifies the name of the device, and topicShortNamespecifies the
      custom name of the topic.  Basic communication topics or Thing Specification
      Language (TSL)-based communication topics. Syntax: ${deviceName}/topicShortName.
      You can replace ${deviceName} with the + wildcard. The wildcard indicates that
      the topic applies to all devices under the product. Valid values of topicShortName:
      /thing/event/property/post: submits the property data of a device. /thing/event/${tsl.event.identifier}/post:
      submits the event data of a device.${tsl.event.identifier} specifies the identifier
      of an event in the TSL. /thing/lifecycle: submits device lifecycle changes.
      /thing/downlink/reply/message: sends a response to a request from IoT Platform.
      /thing/list/found: submits the data when a gateway detects a new sub-device.
      /thing/topo/lifecycle: submits device topology changes. /thing/event/property/history/post:
      submits historical property data of a device. /thing/event/${tsl.event.identifier}/post:
      submits the historical event data of a device.${tsl.event.identifier}specifies
      the identifier of an event in the TSL. /ota/upgrade: submits OTA update status.
      /ota/version/post: submits OTA module versions. /thing/deviceinfo/update: submits
      device tag changes. /edge/driver/${driver_id}/point_post: submits pass-through
      data from Link IoT Edge.${driver_id} specifies the ID of the driver that a device
      uses to access Link IoT Edge.  ${packageId}/${jobId}/ota/job/status: submits
      the status of OTA update batches. This topic is a basic communication topic.
      ${packageId}specifies the ID of the firmware. ${jobId}specifies the ID of the
      update batch.  Custom topics. Example:${deviceName}/user/get.  You can call
      theQueryProductTopicoperation to view all custom topics of the product.  When
      you specify a custom topic, you can use the + and # wildcards.  You can replace
      ${deviceName} with the+ wildcard. The wildcard indicates that the topic applies
      to all devices under the product. You can replace the fields that follow ${deviceName}
      with /user/#. The # wildcard indicates that the topic applies whatever values
      are specified for the fields that follow/user.  For more information about how
      to use wildcards, see Wildcards in topics.  Topic that is used to submit device
      status changes: ${deviceName}.  You can use the+wildcard. In this case, the
      status changes of all devices under the product are submitted.'
    Default: null
  Select:
    Type: String
    Description: The SQL SELECT statement that you want to execute. For more information,
      seeSQL expressions.
    Default: null
  DataType:
    Type: String
    Description: 'The format of the data to be processed by the rule. You must specify
      the format of device data to be processed for this parameter. Valid values:  JSON:
      JSON data BINARY: binary data'
    Default: null
  RuleDesc:
    Type: String
    Description: The description of the rule. The description can be up to 100 characters
      in length. Each Chinese symbol occupies 1 characters.
    Default: null
  Where:
    Type: String
    Description: The condition that is used to trigger the rule. For more information,
      seeSQL expressions.
    Default: null
  ProductKey:
    Type: String
    Description: The ProductKey of the product to which the rule applies.
    Default: null
  ErrorActionFlag:
    Type: Boolean
    Description: |-
      Indicates whether the rule action forwarded error operation data. Error operation
      data indicates that the rule engine failed to forward data from the IoT Platform topic
      to the destination cloud service. A data forwarding failure indicates that forwarding
      retries also failed. Valid values:
      true: forwards error operation data.
      false: forwards normal data instead of error operation data.
      Default value: false.
    Default: false
    AllowedValues:
    - true
    - false
  RuleActionType:
    Type: String
    Description: |-
      The type of the rule action. Valid values:
      MNS: forwards data in the topics that have been processed by the rule engine to Message
      Service (MNS) for message transmission.
      FC: forwards data in the topics that have been processed by the rule engine to Function
      Compute for event computing.
      REPUBLISH: forwards data in the topics that have been processed by the rule engine to another
      IoT Platform topic.
      AMQP: forwards data to AMQP consumer groups.
      OTS: forwards data in the topics that have been processed by the rule engine to Table
      Store for NoSQL data storage.
      Note
      Rules of the binary data format (the DataType parameter is set toBINARY) do not support forwarding data to Table Store.
      Destination Alibaba Cloud services that are supported by the rule engine vary based
      on regions. For more information about the regions and destination cloud services
      that are supported by the rule engine, see Regions and zones.
    Default: MNS
    AllowedValues:
    - AMQP
    - DATAHUB
    - FC
    - MNS
    - ONS
    - OTS
    - REPUBLISH
  TopicName:
    Type: String
Resources:
  IotRule:
    Type: ALIYUN::IOT::Rule
    Properties:
      TopicType:
        Ref: TopicType
      IotInstanceId:
        Ref: IotInstanceId
      ResourceGroupId:
        Ref: ResourceGroupId
      ShortTopic:
        Ref: ShortTopic
      Select:
        Ref: Select
      DataType:
        Ref: DataType
      RuleDesc:
        Ref: RuleDesc
      Where:
        Ref: Where
      ProductKey:
        Ref: ProductKey
      Name:
        Ref: Name
  Topic:
    Type: ALIYUN::MNS::Topic
    Properties:
      TopicName:
        Ref: TopicName
  RuleAction:
    Type: ALIYUN::IOT::RuleAction
    Properties:
      ErrorActionFlag:
        Ref: ErrorActionFlag
      Type:
        Ref: RuleActionType
      IotInstanceId:
        Ref: IotInstanceId
      Configuration:
        Fn::Sub: '{"themeName": "${TopicName}", "regionName": "${ALIYUN::Region}",  "role":
          {"roleArn": "acs:ram::${ALIYUN::TenantId}:role/aliyuniotaccessingmnsrole",
          "roleName": "AliyunIOTAccessingMNSRole"}}'
      RuleId:
        Fn::GetAtt:
        - IotRule
        - RuleId
    DependsOn:
    - IotRule
    - Topic
Outputs:
  RuleId:
    Description: The ID of the rule. The rule ID is generated by the rules engine
      if the call was successful.
    Value:
      Fn::GetAtt:
      - IotRule
      - RuleId
  ActionId:
    Description: 'The ID of the rule action. '
    Value:
      Fn::GetAtt:
      - IotRule
      - ActionId
