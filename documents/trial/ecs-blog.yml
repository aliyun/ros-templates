ROSTemplateFormatVersion: '2015-09-01'
Description:
  zh-cn: 该模板用于在指定ECS实例上自动部署WordPress博客，包括安装必要的环境和服务（Apache、MySQL、PHP），配置安全组规则，并设置WordPress数据库连接，最后提供博客管理页面URL。
  en: This template is designed for automatically deploying a WordPress blog on a
    designated ECS instance, encompassing the installation of required environments
    and services (including Apache, MySQL, and PHP), configuration of security group
    rules, setup of the WordPress database connection, and ultimately, provision of
    the blog administration page URL.
Parameters:
  InstanceId:
    Type: String
    Label:
      en: ECS Instance ID
      zh-cn: ECS实例ID
    AssociationProperty: ALIYUN::ECS::Instance::InstanceId
  DbPassword:
    Type: String
    Label:
      en: MySQL Database Password
      zh-cn: MySQL数据库密码
    Description:
      en: "The password must be 8 to 32 characters in length. <br>\nIt must contain\
        \ the following character types: uppercase letters, lowercase letters, digits,\
        \ and special characters. <br> \nSpecial characters include <span style=\"\
        background:#E7E9EB;\"><b>!@#$%^&*()_+-=</b></span>.<br>\n<b>If you repeatedly\
        \ provision in this tutorial on the same ECS instance, make sure that the\
        \ MySQL database password is exactly the same as the password set when the\
        \ template was executed for the first time. Otherwise, the result of provisioning\
        \ is unavailable.</b>"
      zh-cn: "长度为8~32位，需包含大写字母、小写字母、特殊字符和数字，允许的特殊字符包括<span style=\"background:#E7E9EB;\"\
        ><b>!@#$%^&*()_+-=</b></span>。<br> \n<b>如果您在同一台ECS实例上重复执行本教程的一键配置模板，请确保MySQL数据库密码和第一次执行模板时设置的密码完全一致。否则一键配置结果不可用。</b>"
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])((?=.*[!@#\$%\^&\*\(\)\-\+])|(?=.*[_\.,:;\-\?]))[a-zA-Z0-9!@#\$%\^&\*\(\)\-\+_\.,:;\-\?]{8,32}$
    NoEcho: true
    Confirm: true
Resources:
  DS_Instances:
    Type: DATASOURCE::ECS::Instances
    Properties:
      InstanceIds:
      - Ref: InstanceId
  WaitConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  WaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Handle:
        Ref: WaitConditionHandle
      Timeout: 3720
      Count: 1
  SecurityGroupIngress_22:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 22/22
  SecurityGroupIngress_80:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 80/80
  SecurityGroupIngress_3306:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 3306/3306
  InstallBlog:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
      - Ref: InstanceId
      Type: RunShellScript
      Sync: true
      Timeout: 3600
      CommandContent:
       Fn::Sub: |-
          #!/bin/bash
          if [ ! -f .ros.provision ]; then
            echo "Name: 搭建云上博客" > .ros.provision
          fi

          name=$(grep "^Name:" .ros.provision | awk -F':' '{print $2}' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
          if [[ "$name" != "搭建云上博客" ]]; then
            ${WaitConditionHandle.CurlCli} --data-binary "{\"status\": \"FAILURE\", \"reason\": \"The current instance has already applied the configuration of the \\\"$name\\\" tutorial, and the configuration of this tutorial can no longer be applied.\"}"
            exit 0
          fi

          if ! grep -q "^Step1: Install Environment$" .ros.provision; then
            echo "#########################"
            echo "# Install Environment"
            echo "#########################"
            yum -y install httpd httpd-manual mod_ssl mod_perl mod_auth_mysql
            systemctl start httpd
            systemctl enable httpd
            systemctl status httpd

            wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm
            yum install -y mysql57-community-release-el7-10.noarch.rpm
            yum install -y mysql-community-server --nogpgcheck
            systemctl start mysqld.service
            systemctl status mysqld.service
            export MYSQL_PWD=`grep "temporary password" /var/log/mysqld.log | awk '{print $NF}'`
            mysqladmin -uroot password '${DbPassword}'
            export MYSQL_PWD='${DbPassword}'
            mysql -uroot -e "create database wordpress;"

            yum install -y https://repo.ius.io/ius-release-el7.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
            rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm
            yum install -y php70w-devel php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64 php70w-pdo.x86_64 php70w-mysqlnd php70w-fpm php70w-opcache php70w-pecl-redis php70w-pecl-mongodb
            echo "<?php phpinfo(); ?>" > /var/www/html/phpinfo.php
            systemctl restart httpd
            echo "Step1: Install Environment" >> .ros.provision
          else
            echo "#########################"
            echo "# Environment has been installed"
            echo "#########################"
          fi

          if ! grep -q "^Step2: Install and Config WordPress$" .ros.provision; then
            echo "################################"
            echo "# Install and Config WordPress"
            echo "################################"
            wget https://cn.wordpress.org/latest-zh_CN.tar.gz
            tar -xvf latest-zh_CN.tar.gz -C /var/www/html
            chown -R apache:apache /var/www/html/wordpress
            chmod -R 755 /var/www/html/wordpress
            mv /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php
            sed -i 's/database_name_here/wordpress/' /var/www/html/wordpress/wp-config.php
            sed -i 's/username_here/root/' /var/www/html/wordpress/wp-config.php
            sed -i 's/password_here/${DbPassword}/' /var/www/html/wordpress/wp-config.php
            systemctl restart httpd
            echo "Step2: Install and Config WordPress" >> .ros.provision
          else
            echo "#########################"
            echo "# WordPress has been installed and configed"
            echo "#########################"
          fi

          ${WaitConditionHandle.CurlCli} --data-binary '{"status": "SUCCESS"}'

    DependsOn:
    - SecurityGroupIngress_22
    - SecurityGroupIngress_3306
    - SecurityGroupIngress_80
Outputs:
  WbAdminUrl:
    Description:
      en: WordPress Admin Page.
      zh-cn: WordPress管理页面。
    Value:
      Fn::Sub:
      - http://${IP}/wordpress/wp-admin
      - IP:
          Fn::Jq:
          - First
          - if .[0].PublicIpAddress != [] then .[0].PublicIpAddress[0] else .[0].EipAddress.IpAddress
            end
          - Fn::GetAtt:
            - DS_Instances
            - Instances
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - InstanceId
      - DbPassword
    TemplateTags:
    - acs:document:试用教程:搭建云上博客
