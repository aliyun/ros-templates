ROSTemplateFormatVersion: '2015-09-01'
Description:
  zh-cn: 创建CentOS 7.9 ECS上的LAMP环境，配置静态网页，通过CLB实现高可用性。
  en: Set up a LAMP environment on a CentOS 7.9 ECS instance, configure static web
    content, and ensure high availability through a Classic Load Balancer (CLB).
Parameters:
  LoadBalancerId:
    Type: String
    Label:
      en: CLB Instance ID
      zh-cn: CLB实例ID
    AssociationProperty: ALIYUN::SLB::Instance::InstanceId
  EcsInstanceIds:
    Type: CommaDelimitedList
    Label:
      en: ECS Instance ID List
      zh-cn: ECS实例ID列表
    Description:
      en: Please select 2 ECS instances equipped with CentOS 7 system, <span style="background:#E7E9EB;"><b>the
        ECS instance and the CLB instance need to be under the same VPC</b></span>.
      zh-cn: 请选择2个搭载CentOS 7系统的ECS实例，<span style="background:#E7E9EB;"><b>ECS实例和CLB实例需要在同一个VPC下</b></span>。
    AssociationProperty: ALIYUN::ECS::Instance::InstanceId
    MinLength: 2
    MaxLength: 2
  DbPassword:
    Type: String
    Label:
      en: MySQL Database Password
      zh-cn: MySQL数据库密码
    Description:
      en: "The password must be 8 to 32 characters in length. <br>\nIt must contain\
        \ the following character types: uppercase letters, lowercase letters, digits,\
        \ and special characters. <br> \nSpecial characters include <span style=\"\
        background:#E7E9EB;\"><b>!@#$%^&*()_+-=</b></span>.<br>\n<b>If you repeatedly\
        \ provision in this tutorial on the same ECS instance, make sure that the\
        \ MySQL database password is exactly the same as the password set when the\
        \ template was executed for the first time. Otherwise, the result of provisioning\
        \ is unavailable.</b>"
      zh-cn: "长度为8~32位，需包含大写字母、小写字母、特殊字符和数字，允许的特殊字符包括<span style=\"background:#E7E9EB;\"\
        ><b>!@#$%^&*()_+-=</b></span>。<br> \n<b>如果您在同一台ECS实例上重复执行本教程的一键配置模板，请确保MySQL数据库密码和第一次执行模板时设置的密码完全一致。否则一键配置结果不可用。</b>"
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])((?=.*[!@#\$%\^&\*\(\)\-\+])|(?=.*[_\.,:;\-\?]))[a-zA-Z0-9!@#\$%\^&\*\(\)\-\+_\.,:;\-\?]{8,32}$
    NoEcho: true
    Confirm: true
Resources:
  DS_Instances:
    Type: DATASOURCE::ECS::Instances
    Properties:
      InstanceIds:
      - Fn::Select:
        - 0
        - Ref: EcsInstanceIds
  WaitConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  WaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Handle:
        Ref: WaitConditionHandle
      Timeout: 3720
      Count: 1
  SecurityGroupIngress_22:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 22/22
  SecurityGroupIngress_80:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 80/80
  SecurityGroupIngress_3306:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 3306/3306
  InstallLAMP:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
        Ref: EcsInstanceIds
      Type: RunShellScript
      Sync: true
      Timeout: 3600
      CommandContent:
        Fn::Sub: "#!/bin/bash\nif [ ! -f .ros.provision ]; then\n  echo \"Name: 手动部署LAMP环境（CentOS\
          \ 7）\" > .ros.provision\nfi\n\nname=$(grep \"^Name:\" .ros.provision | awk\
          \ -F':' '{print $2}' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')\n\
          if [[ \"$name\" != \"手动部署LAMP环境（CentOS 7）\" ]]; then\n  echo \"当前实例已使用过\\\
          \"$name\\\"教程的一键配置，不能再使用本教程的一键配置\"\n  ${WaitConditionHandle.CurlCli} --data-binary\
          \ \"{\\\"status\\\": \\\"FAILURE\\\", \\\"reason\\\": \\\"The current instance\
          \ has already applied the configuration of the \\\\\\\"$name\\\\\\\" tutorial,\
          \ and the configuration of this tutorial can no longer be applied.\\\"}\"\
          \n  exit 0\nfi\n\necho \"#########################\"\necho \"# Check Network\"\
          \necho \"#########################\"\nping -c 2 -W 2 aliyun.com > /dev/null\n\
          if [[ $? -ne 0 ]]; then\n  echo \"当前实例无法访问公网\"\n  ${WaitConditionHandle.CurlCli}\
          \ --data-binary \"{\\\"status\\\": \\\"FAILURE\\\", \\\"reason\\\": \\\"\
          The current instance cannot access the public network.\\\"}\"\n  exit 0\n\
          fi\n\nif ! grep -q \"^Step1: Prepare Environment$\" .ros.provision; then\n\
          \  echo \"#########################\"\n  echo \"# Prepare Environment\"\n\
          \  echo \"#########################\"\n  systemctl status firewalld\n  systemctl\
          \ stop firewalld\n  echo \"Step1: Prepare Environment\" >> .ros.provision\n\
          else\n  echo \"#########################\"\n  echo \"# Environment has been\
          \ ready\"\n  echo \"#########################\"\nfi\n\nif ! grep -q \"^Step1:\
          \ Install Apache$\" .ros.provision; then\n  echo \"#########################\"\
          \n  echo \"# Install Apache\"\n  echo \"#########################\"\n  yum\
          \ install -y httpd httpd-manual mod_ssl mod_perl mod_auth_mysql\n  systemctl\
          \ start httpd\n  systemctl enable httpd\n  systemctl status httpd\n  echo\
          \ \"Step1: Install Apache\" >> .ros.provision\nelse\n  echo \"#########################\"\
          \n  echo \"# Apache has been installed\"\n  echo \"#########################\"\
          \nfi\n\nif ! grep -q \"^Step2: Install MySQL$\" .ros.provision; then\n \
          \ echo \"#########################\"\n  echo \"# Install MySQL\"\n  echo\
          \ \"#########################\"\n  wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm\n\
          \  yum install -y mysql57-community-release-el7-10.noarch.rpm\n  yum install\
          \ -y mysql-community-server --nogpgcheck\n  systemctl start mysqld.service\n\
          \  systemctl status mysqld.service\n  export MYSQL_PWD=`grep \"temporary\
          \ password\" /var/log/mysqld.log | awk '{print $NF}'`\n  mysqladmin -uroot\
          \ password '${DbPassword}'\n  export MYSQL_PWD='${DbPassword}'\n  mysql\
          \ -uroot -e \"GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '${DbPassword}'\"\
          \n  echo \"Step2: Install MySQL\" >> .ros.provision\nelse\n  echo \"#########################\"\
          \n  echo \"# MySQL has been installed\"\n  echo \"#########################\"\
          \nfi\nif ! grep -q \"^Step3: Install PHP$\" .ros.provision; then\n  echo\
          \ \"#########################\"\n  echo \"# Install PHP\"\n  echo \"#########################\"\
          \n  yum install -y https://repo.ius.io/ius-release-el7.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\
          \  rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n \
          \ yum install -y php70w-devel php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64\
          \ php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64\
          \ php70w-pdo.x86_64 php70w-mysqlnd php70w-fpm php70w-opcache php70w-pecl-redis\
          \ php70w-pecl-mongodb\n  echo \"<?php phpinfo(); ?>\" > /var/www/html/phpinfo.php\n\
          \  systemctl restart httpd\n  echo \"Step3: Install PHP\" >> .ros.provision\n\
          else\n  echo \"#########################\"\n  echo \"# PHP has been installed\"\
          \n  echo \"#########################\"\nfi\n\n${WaitConditionHandle.CurlCli}\
          \ --data-binary '{\"status\": \"SUCCESS\"}'"
    DependsOn:
    - SecurityGroupIngress_22
    - SecurityGroupIngress_3306
    - SecurityGroupIngress_80
  Page:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
      - Fn::Select:
        - Ref: ALIYUN::Index
        - Ref: EcsInstanceIds
      Type: RunShellScript
      Sync: true
      CommandContent:
        Fn::Sub:
        - '#!/bin/bash

          echo "Hello World ! This is ECS0${Index}." > /var/www/html/index.html

          systemctl restart httpd

          '
        - Index:
            Fn::Add:
            - 1
            - Ref: ALIYUN::Index
    DependsOn: InstallLAMP
    Count:
      Fn::Length:
        Ref: EcsInstanceIds
  DS_LoadBalancers:
    Type: DATASOURCE::SLB::LoadBalancers
    Properties:
      LoadBalancerId:
        Ref: LoadBalancerId
  ServerGroup:
    Type: ALIYUN::SLB::VServerGroup
    Properties:
      LoadBalancerId:
        Ref: LoadBalancerId
      VServerGroupName: TrialTutorial
      BackendServers:
      - ServerId:
          Fn::Select:
          - 0
          - Ref: EcsInstanceIds
        Port: 80
      - ServerId:
          Fn::Select:
          - 1
          - Ref: EcsInstanceIds
        Port: 80
    DependsOn: Page
  Listener:
    Type: ALIYUN::SLB::Listener
    Properties:
      VServerGroupId:
        Ref: ServerGroup
      LoadBalancerId:
        Ref: LoadBalancerId
      Protocol: http
      ListenerPort: 80
      HealthCheck:
        Switch: 'on'
        URI: /
        HealthCheckMethod: head
        Timeout: 5
        HealthyThreshold: 2
        UnhealthyThreshold: 2
        Interval: 2
      Bandwidth: -1
      StartListener: true
Outputs:
  Url:
    Description:
      en: Info Page.
      zh-cn: 信息页面。
    Value:
      Fn::Sub:
      - http://${IP}
      - IP:
          Fn::Jq:
          - First
          - .[0].Address
          - Fn::GetAtt:
            - DS_LoadBalancers
            - LoadBalancers
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - LoadBalancerId
      - EcsInstanceIds
      - DbPassword
    TemplateTags:
    - acs:document:试用教程:部署高可用LAMP环境
