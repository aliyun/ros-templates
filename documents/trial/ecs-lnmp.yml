ROSTemplateFormatVersion: '2015-09-01'
Description:
  zh-cn: 该模板用于在指定ECS实例上自动部署LNMP环境（Nginx、MySQL、PHP），配置安全组规则，并提供访问URL。要求输入实例ID和符合规范的MySQL密码。
  en: This template is designed for automatically deploying an LNMP stack (comprising
    Nginx, MySQL, and PHP) on a designated ECS instance, configuring security group
    rules, and furnishing an access URL. It necessitates the input of the instance
    ID and a compliant MySQL password.
Parameters:
  InstanceId:
    Type: String
    Label:
      en: ECS Instance ID
      zh-cn: ECS实例ID
    AssociationProperty: ALIYUN::ECS::Instance::InstanceId
  DbPassword:
    Type: String
    Label:
      en: MySQL Database Password
      zh-cn: MySQL数据库密码
    Description:
      en: "The password must be 8 to 32 characters in length. <br>\nIt must contain\
        \ the following character types: uppercase letters, lowercase letters, digits,\
        \ and special characters. <br> \nSpecial characters include <span style=\"\
        background:#E7E9EB;\"><b>!@#$%^&*()_+-=</b></span>.<br>\n<b>If you repeatedly\
        \ provision in this tutorial on the same ECS instance, make sure that the\
        \ MySQL database password is exactly the same as the password set when the\
        \ template was executed for the first time. Otherwise, the result of provisioning\
        \ is unavailable.</b>"
      zh-cn: "长度为8~32位，需包含大写字母、小写字母、特殊字符和数字，允许的特殊字符包括<span style=\"background:#E7E9EB;\"\
        ><b>!@#$%^&*()_+-=</b></span>。<br> \n<b>如果您在同一台ECS实例上重复执行本教程的一键配置模板，请确保MySQL数据库密码和第一次执行模板时设置的密码完全一致。否则一键配置结果不可用。</b>"
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])((?=.*[!@#\$%\^&\*\(\)\-\+])|(?=.*[_\.,:;\-\?]))[a-zA-Z0-9!@#\$%\^&\*\(\)\-\+_\.,:;\-\?]{8,32}$
    NoEcho: true
    Confirm: true
Resources:
  DS_Instances:
    Type: DATASOURCE::ECS::Instances
    Properties:
      InstanceIds:
      - Ref: InstanceId
  WaitConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  WaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Handle:
        Ref: WaitConditionHandle
      Timeout: 3720
      Count: 1
  SecurityGroupIngress_22:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 22/22
  SecurityGroupIngress_80:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 80/80
  SecurityGroupIngress_3306:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 3306/3306
  InstallLnmp:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
      - Ref: InstanceId
      Type: RunShellScript
      Sync: true
      Timeout: 3600
      CommandContent:
        Fn::Sub: "#!/bin/bash\nif [ ! -f .ros.provision ]; then\n  echo \"Name: 部署LNMP环境\"\
          \ > .ros.provision\nfi\n\nname=$(grep \"^Name:\" .ros.provision | awk -F':'\
          \ '{print $2}' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')\nif\
          \ [[ \"$name\" != \"部署LNMP环境\" ]]; then\n  echo \"当前实例已使用过\\\"$name\\\"\
          教程的一键配置，不能再使用本教程的一键配置\"\n  ${WaitConditionHandle.CurlCli} --data-binary\
          \ \"{\\\"status\\\": \\\"FAILURE\\\", \\\"reason\\\": \\\"The current instance\
          \ has already applied the configuration of the \\\\\\\"$name\\\\\\\" tutorial,\
          \ and the configuration of this tutorial can no longer be applied.\\\"}\"\
          \n  exit 0\nfi\n\nif ! grep -q \"^Step1: Install Nginx$\" .ros.provision;\
          \ then\n  echo \"#########################\"\n  echo \"# Install Nginx\"\
          \n  echo \"#########################\"\n  yum install -y gcc pcre pcre-devel\
          \ zlib zlib-devel\n  wget http://nginx.org/download/nginx-1.17.10.tar.gz\n\
          \  tar -zxvf nginx-1.17.10.tar.gz\n  cd nginx-1.17.10\n  ./configure\n \
          \ make && make install\n  cd /usr/local/nginx/\n  sbin/nginx\n  cd\n  echo\
          \ \"Step1: Install Nginx\" >> .ros.provision\nelse\n  echo \"#########################\"\
          \n  echo \"# Nginx has been installed\"\n  echo \"#########################\"\
          \nfi\n\nif ! grep -q \"^Step2: Install MySQL$\" .ros.provision; then\n \
          \ echo \"#########################\"\n  echo \"# Install MySQL\"\n  echo\
          \ \"#########################\"\n  wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm\n\
          \  yum install -y mysql57-community-release-el7-10.noarch.rpm\n  yum install\
          \ -y mysql-community-server --nogpgcheck\n  systemctl start mysqld.service\n\
          \  systemctl status mysqld.service\n  export MYSQL_PWD=`grep \"temporary\
          \ password\" /var/log/mysqld.log | awk '{print $NF}'`\n  mysqladmin -uroot\
          \ password '${DbPassword}'\n  export MYSQL_PWD='${DbPassword}'\n  mysql\
          \ -uroot -e \"GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '${DbPassword}'\"\
          \n  echo \"Step2: Install MySQL\" >> .ros.provision\nelse\n  echo \"#########################\"\
          \n  echo \"# MySQL has been installed\"\n  echo \"#########################\"\
          \nfi\n\nif ! grep -q \"^Step3: Install PHP$\" .ros.provision; then\n  echo\
          \ \"#########################\"\n  echo \"# Install PHP\"\n  echo \"#########################\"\
          \n  yum install -y php php-mysql php-fpm\n  cat > /usr/local/nginx/conf/nginx.conf\
          \ << \\EOF\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n\
          #error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\
          \n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n\
          }\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\
          \n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\"\
          \ '\n    #                  '$status $body_bytes_sent \"$http_referer\"\
          \ '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"\
          ';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n\
          \    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout\
          \  65;\n\n    #gzip  on;\n\n    server {\n        listen       80;\n   \
          \     server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log\
          \  logs/host.access.log  main;\n\n        location / {\n            root\
          \   html;\n            index  index.html index.htm index.php;\n        \
          \    \n        }\n        if (!-e $request_filename) {\n            rewrite\
          \ ^/(.*)$ /index.php/$1 last;\n        }\n\n        location ~ .*\\.php(\\\
          /.*)*$ {\n            fastcgi_pass   127.0.0.1:9000;\n            include\
          \       fastcgi.conf;\n            fastcgi_index  index.php;\n        }\n\
          \n        #error_page  404              /404.html;\n\n        # redirect\
          \ server error pages to the static page /50x.html\n        #\n        error_page\
          \   500 502 503 504  /50x.html;\n        location = /50x.html {\n      \
          \      root   html;\n        }\n\n        # proxy the PHP scripts to Apache\
          \ listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n\
          \        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass\
          \ the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n      \
          \  #\n        #location ~ \\.php$ {\n        #    root           html;\n\
          \        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index\
          \  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n\
          \        #    include        fastcgi_params;\n        #}\n\n        # deny\
          \ access to .htaccess files, if Apache's document root\n        # concurs\
          \ with nginx's one\n        #\n        #location ~ /\\.ht {\n        # \
          \   deny  all;\n        #}\n    }\n\n\n    # another virtual host using\
          \ mix of IP-, name-, and port-based configuration\n    #\n    #server {\n\
          \    #    listen       8000;\n    #    listen       somename:8080;\n   \
          \ #    server_name  somename  alias  another.alias;\n\n    #    location\
          \ / {\n    #        root   html;\n    #        index  index.html index.htm;\n\
          \    #    }\n    #}\n\n\n    # HTTPS server\n    #\n    #server {\n    #\
          \    listen       443 ssl;\n    #    server_name  localhost;\n\n    #  \
          \  ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\
          \n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout\
          \  5m;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers\
          \  on;\n\n    #    location / {\n    #        root   html;\n    #      \
          \  index  index.html index.htm;\n    #    }\n    #}\n\n}\nEOF\n  systemctl\
          \ restart php-fpm\n  /usr/local/nginx/sbin/nginx -s reload\n  echo \"<?php\
          \ phpinfo(); ?>\" > /usr/local/nginx/html/phpinfo.php\n  echo \"Step3: Install\
          \ PHP\" >> .ros.provision\nelse\n  echo \"#########################\"\n\
          \  echo \"# PHP has been installed\"\n  echo \"#########################\"\
          \nfi\n\n${WaitConditionHandle.CurlCli} --data-binary '{\"status\": \"SUCCESS\"\
          }'"
    DependsOn:
    - SecurityGroupIngress_22
    - SecurityGroupIngress_3306
    - SecurityGroupIngress_80
Outputs:
  NginxUrl:
    Description:
      en: Nginx Info Page.
      zh-cn: Nginx信息页面。
    Value:
      Fn::Sub:
      - http://${IP}
      - IP:
          Fn::Jq:
          - First
          - if .[0].PublicIpAddress != [] then .[0].PublicIpAddress[0] else .[0].EipAddress.IpAddress
            end
          - Fn::GetAtt:
            - DS_Instances
            - Instances
  PhpUrl:
    Description:
      en: PHP Info Page.
      zh-cn: PHP信息页面。
    Value:
      Fn::Sub:
      - http://${IP}/phpinfo.php
      - IP:
          Fn::Jq:
          - First
          - if .[0].PublicIpAddress != [] then .[0].PublicIpAddress[0] else .[0].EipAddress.IpAddress
            end
          - Fn::GetAtt:
            - DS_Instances
            - Instances
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - InstanceId
      - DbPassword
    TemplateTags:
    - acs:document:试用教程:部署LNMP环境
