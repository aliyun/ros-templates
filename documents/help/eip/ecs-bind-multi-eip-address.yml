ROSTemplateFormatVersion: '2015-09-01'
Parameters:
  EcsCondition:
    Type: String
    Label:
      zh-cn: 是否创建ECS/Eip/Eni
      en: Create an ECS/Eip/Eni
    AllowedValues:
      - 使用已有ECS/Eip/Eni
      - 创建ECS/Eip/Eni
    Default: 使用已有ECS/Eip/Eni
  EcsInstanceId:
    Type: String
    Default: Null
    Label:
      en: ECS Instance ID
      zh-cn: ECS实例ID
    AssociationProperty: ALIYUN::ECS::Instance::InstanceId
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${EcsCondition}
              - 创建ECS/Eip/Eni
  ECSNetworkInterfaceId:
    Type: String
    Default: Null
    Label:
      en: ECS Network Interface ID
      zh-cn: ECS弹性网卡ID
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${EcsCondition}
              - 创建ECS/Eip/Eni
  EipId1:
    Type: String
    Default: Null
    Label:
      en: Elastic IP Address1 Instance ID
      zh-cn: 弹性公网IP1实例ID
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${EcsCondition}
              - 创建ECS/Eip/Eni
  EipId2:
    Type: String
    Default: Null
    Label:
      en: Elastic IP Address2 Instance ID
      zh-cn: 弹性公网IP2实例ID
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${EcsCondition}
              - 创建ECS/Eip/Eni
  EipId3:
    Type: String
    Default: Null
    Label:
      en: Elastic IP Address3 Instance ID
      zh-cn: 弹性公网IP3实例ID
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${EcsCondition}
              - 创建ECS/Eip/Eni
  SystemDiskCategory:
    Default: Null
    AssociationProperty: ALIYUN::ECS::Disk::SystemDiskCategory
    AssociationPropertyMetadata:
      InstanceType: ${InstanceType}
      ZoneId: ${ZoneId}
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${EcsCondition}
              - 使用已有ECS/Eip/Eni
    Type: String
    Description:
      zh-cn: '<font color=''blue''><b>可选值：</b></font><br>[cloud_efficiency: <font color=''green''>高效云盘</font>]<br>[cloud_ssd: <font color=''green''>SSD云盘</font>]<br>[cloud_essd: <font color=''green''>ESSD云盘</font>]<br>[cloud: <font color=''green''>普通云盘</font>]<br>[ephemeral_ssd: <font color=''green''>本地SSD盘</font>]'
      en: '<font color=''blue''><b>Optional values:</b></font><br>[cloud_efficiency: <font color=''green''>Efficient Cloud Disk</font>]<br>[cloud_ssd: <font color=''green''>SSD Cloud Disk</font>]<br>[cloud_essd: <font color=''green''>ESSD Cloud Disk</font>]<br>[cloud: <font color=''green''>Cloud Disk</font>]<br>[ephemeral_ssd: <font color=''green''>Local SSD Cloud Disk</font>]'
    Label:
      zh-cn: 系统磁盘类型
      en: System Disk Category
  InstancePassword:
    ConstraintDescription:
      zh-cn: 长度8-30，必须包含大写字母、小写字母、数字、特殊符号三种；特殊字符包括：()`~!@#$%^&*_-+=|{}[]:;' <>,.?/
      en: 'Length 8-30, must contain upper case letters, lower case letters, Numbers, special symbols three; special characters include: ()`~!@#$%^&*_-+=|{}[]:;''<>,.?/'
    Description:
      zh-cn: 长度8-30，必须包含大写字母、小写字母、数字、特殊符号三个；<br>特殊字符包括：()`~!@#$%^&*_-+=|{}[]:;'<>,.?/
      en: The 8-30 long login password of instance, consists of the uppercase, lowercase letter and number. <br> special characters include()`~!@#$%^&*_-+=|{}[]:;'<>,.?/
    MinLength: '8'
    Label:
      zh-cn: 实例密码
      en: Instance Password
    AllowedPattern: '[0-9A-Za-z\_\-&:;''<>,=%`~!@#\(\)\$\^\*\+\|\{\}\[\]\.\?\/]+$'
    NoEcho: true
    Default: Null
    MaxLength: '30'
    Type: String
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${EcsCondition}
              - 使用已有ECS/Eip/Eni
  InstanceType:
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      ZoneId: ${ZoneId}
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${EcsCondition}
              - 使用已有ECS/Eip/Eni
    Type: String
    Default: Null
    Label:
      zh-cn: 实例类型
      en: Instance Type
  ZoneId:
    Default: Null
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    Type: String
    Description:
      zh-cn: 可用区ID。<br><b>注： <font color='blue'>选择可用区前请确认该可用区是否支持创建ECS资源的规格</font></b>
      en: Availability Zone ID,<br><b>note： <font color='blue'>Before selecting, please confirm that the Availability Zone supports the specification of creating ECS resources</font></b>
    Label:
      zh-cn: 可用区ID
      en: Available Zone ID
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${EcsCondition}
              - 使用已有ECS/Eip/Eni
Resources:
  DS_Instances:
    Condition: HasEcs
    Type: DATASOURCE::ECS::Instances
    Properties:
      InstanceIds:
        - Ref: EcsInstanceId
  DS_NetworkInterfaces:
    Condition: HasEcs
    Type: DATASOURCE::ECS::NetworkInterfaces
    Properties:
      NetworkInterfaceIds:
        - Ref: ECSNetworkInterfaceId
  DS_Eip1:
    Condition: HasEcs
    Type: DATASOURCE::EIP::Addresses
    Properties:
      AllocationId:
        Ref: EipId1
  DS_Eip2:
    Condition: HasEcs
    Type: DATASOURCE::EIP::Addresses
    Properties:
      AllocationId:
        Ref: EipId2
  DS_Eip3:
    Condition: HasEcs
    Type: DATASOURCE::EIP::Addresses
    Properties:
      AllocationId:
        Ref: EipId3
  AssignPrivateIpAddresses:
    Type: ALIYUN::ECS::AssignPrivateIpAddresses
    Properties:
      NetworkInterfaceId:
        Fn::If:
          - CreateEcs
          - Fn::GetAtt:
              - EcsENI
              - NetworkInterfaceId
          - Ref: ECSNetworkInterfaceId
      SecondaryPrivateIpAddressCount: 2
  EipAssociationPrimaryPrivateIp:
    DependsOn:
      - AssignPrivateIpAddresses
    Type: ALIYUN::VPC::EIPAssociation
    Properties:
      InstanceId:
        Fn::If:
          - CreateEcs
          - Fn::GetAtt:
              - EcsENI
              - NetworkInterfaceId
          - Ref: ECSNetworkInterfaceId
      AllocationId:
        Fn::If:
          - CreateEcs
          - Fn::GetAtt:
              - Eip1
              - AllocationId
          - Ref: EipId1
      PrivateIpAddress:
        Fn::If:
          - CreateEcs
          - Fn::GetAtt:
              - EcsENI
              - PrivateIpAddress
          - Fn::Jq:
              - First
              - .[0].PrivateIpAddress
              - Fn::GetAtt:
                  - DS_NetworkInterfaces
                  - NetworkInterfaces
      Mode: NAT
  EipAssociationSecondaryPrivateIp1:
    Type: ALIYUN::VPC::EIPAssociation
    DependsOn:
      - EipAssociationPrimaryPrivateIp
    Properties:
      InstanceId:
        Fn::If:
          - CreateEcs
          - Fn::GetAtt:
              - EcsENI
              - NetworkInterfaceId
          - Ref: ECSNetworkInterfaceId
      AllocationId:
        Fn::If:
          - CreateEcs
          - Fn::GetAtt:
              - Eip2
              - AllocationId
          - Ref: EipId2
      PrivateIpAddress:
        Fn::Select:
          - '0'
          - Fn::GetAtt:
              - AssignPrivateIpAddresses
              - PrivateIpAddresses
      Mode: NAT
  EipAssociationSecondaryPrivateIp2:
    DependsOn:
      - EipAssociationSecondaryPrivateIp1
    Type: ALIYUN::VPC::EIPAssociation
    Properties:
      InstanceId:
        Fn::If:
          - CreateEcs
          - Fn::GetAtt:
              - EcsENI
              - NetworkInterfaceId
          - Ref: ECSNetworkInterfaceId
      AllocationId:
        Fn::If:
          - CreateEcs
          - Fn::GetAtt:
              - Eip3
              - AllocationId
          - Ref: EipId3
      PrivateIpAddress:
        Fn::Select:
          - '1'
          - Fn::GetAtt:
              - AssignPrivateIpAddresses
              - PrivateIpAddresses
      Mode: NAT
  EcsEniAttachment:
    DependsOn:
      - EipAssociationPrimaryPrivateIp
      - EipAssociationSecondaryPrivateIp1
      - EipAssociationSecondaryPrivateIp2
    Type: ALIYUN::ECS::NetworkInterfaceAttachment
    Properties:
      InstanceId:
        Fn::If:
          - CreateEcs
          - Fn::GetAtt:
              - EcsInstance
              - InstanceId
          - Ref: EcsInstanceId
      NetworkInterfaceId:
        Fn::If:
          - CreateEcs
          - Fn::GetAtt:
              - EcsENI
              - NetworkInterfaceId
          - Ref: ECSNetworkInterfaceId
  WaitConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: { }
  WaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Handle:
        Ref: WaitConditionHandle
      Timeout: 3720
      Count: 1
  SecurityGroupIngress_22:
    Condition: HasEcs
    Type: ALIYUN::ECS::SecurityGroupIngress
    DependsOn:
      - EcsEniAttachment
    Properties:
      SecurityGroupId:
        Fn::Jq:
          - First
          - .[0].SecurityGroupIds[0]
          - Fn::GetAtt:
              - DS_Instances
              - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 22/22
  InitEcsEni:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
        - Fn::If:
            - CreateEcs
            - Fn::GetAtt:
                - EcsInstance
                - InstanceId
            - Ref: EcsInstanceId
      Type: RunShellScript
      Sync: true
      Timeout: 3600
      CommandContent:
        Fn::Sub:
        - |
          #!/bin/bash
          if [ ! -f .ros.provision ]; then
            echo "Name: 普通模式下实现ECS绑定多EIP（CentOS 7）" > .ros.provision
          fi
          name=$(grep "^Name:" .ros.provision | awk -F':' '{print $2}' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
          if [[ "$name" != "普通模式下实现ECS绑定多EIP（CentOS 7）" ]]; then
            echo "当前实例已使用过\"$name\"教程的一键配置，不能再使用本教程的一键配置"
            ${WaitConditionHandle.CurlCli} --data-binary "{\"status\": \"FAILURE\", \"reason\": \"The current instance has already applied the configuration of the \\\"$name\\\" tutorial, and the configuration of this tutorial can no longer be applied.\"}"
            exit 0
          fi
          secondary_eni=`ip address show | grep eth | grep DOWN | awk -F: '{print $2}'`
          secondary_eni_name=`eval echo "$secondary_eni"`
          if [[ "$secondary_eni_name" != "" ]]; then
            echo "#########################"
            echo "# The secondary Eni is not fully configured"
            echo "#########################"
            secondary_eni_mac=`cat /sys/class/net/"$secondary_eni_name"/address`
            echo "DEVICE=$secondary_eni_name" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name"
            echo "BOOTPROTO=dhcp" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name"
            echo "ONBOOT=yes" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name"
            echo "TYPE=Ethernet" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name"
            echo "USERCTL=yes" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name"
            echo "PEERDNS=no" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name"
            echo "IPV6INIT=no" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name"
            echo "PERSISTENT_DHCLIENT=yes" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name"
            echo "HWADDR=$secondary_eni_mac" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name"
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name"
            systemctl restart network
          else
              echo "#########################"
              echo "# Secondary Eni has been configured"
              echo "#########################"
          fi
          netmask_address=`ifconfig "$secondary_eni_name"| grep netmask | awk '{print $4}'`
          echo "DEVICE=$secondary_eni_name:0" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":0
          echo "TYPE=Ethernet" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":0
          echo "BOOTPROTO=static" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":0
          echo "ONBOOT=yes" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":0
          echo "IPADDR=${PrivateIpAddresses1}" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":0
          echo "NETMASK=$netmask_address" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":0
          echo "DEVICE=$secondary_eni_name:1" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":1
          echo "TYPE=Ethernet" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":1
          echo "BOOTPROTO=static" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":1
          echo "ONBOOT=yes" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":1
          echo "IPADDR=${PrivateIpAddresses2}" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":1
          echo "NETMASK=$netmask_address" >> /etc/sysconfig/network-scripts/ifcfg-"$secondary_eni_name":1
          systemctl restart network
          echo "# Secondary Eni PrivateIpAddresses has been configured"
          ${WaitConditionHandle.CurlCli} --data-binary '{"status": "SUCCESS"}'
        - PrivateIpAddresses1:
            Fn::Select:
              - '0'
              - Fn::GetAtt:
                  - AssignPrivateIpAddresses
                  - PrivateIpAddresses
          PrivateIpAddresses2:
            Fn::Select:
              - '1'
              - Fn::GetAtt:
                  - AssignPrivateIpAddresses
                  - PrivateIpAddresses
    DependsOn:
      - EcsEniAttachment
  EcsVpc:
    Condition: CreateEcs
    Type: ALIYUN::ECS::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
  EcsVSwitch:
    Type: ALIYUN::ECS::VSwitch
    Condition: CreateEcs
    Properties:
      VpcId:
        Ref: EcsVpc
      CidrBlock: 192.168.1.0/24
      ZoneId:
        Ref: ZoneId
  EcsSecurityGroup:
    Condition: CreateEcs
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      SecurityGroupIngress:
        - Priority: 1
          PortRange: 22/22
          NicType: internet
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
      VpcId:
        Ref: EcsVpc
  EcsInstance:
    Condition: CreateEcs
    Type: ALIYUN::ECS::Instance
    Properties:
      SystemDiskCategory:
        Ref: SystemDiskCategory
      VpcId:
        Fn::GetAtt:
          - EcsVpc
          - VpcId
      AllocatePublicIP: false
      SecurityGroupId:
        Ref: EcsSecurityGroup
      ImageId: centos_7
      VSwitchId:
        Ref: EcsVSwitch
      Password:
        Ref: InstancePassword
      InstanceType:
        Ref: InstanceType
  EcsENI:
    Condition: CreateEcs
    Type: ALIYUN::ECS::NetworkInterface
    Properties:
      VSwitchId:
        Ref: EcsVSwitch
      SecurityGroupId:
        Ref: EcsSecurityGroup
  Eip1:
    Condition: CreateEcs
    Type: ALIYUN::VPC::EIP
    Properties:
      InstanceChargeType: Postpaid
      InternetChargeType: PayByTraffic
  Eip2:
    Condition: CreateEcs
    Type: ALIYUN::VPC::EIP
    Properties:
      InstanceChargeType: Postpaid
      InternetChargeType: PayByTraffic
  Eip3:
    Condition: CreateEcs
    Type: ALIYUN::VPC::EIP
    Properties:
      InstanceChargeType: Postpaid
      InternetChargeType: PayByTraffic
Outputs: { }
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
      - Parameters:
          - EcsCondition
          - EcsInstanceId
          - ZoneId
          - InstanceType
          - SystemDiskCategory
          - InstancePassword
          - ECSNetworkInterfaceId
          - EipId1
          - EipId2
          - EipId3
    TemplateTags:
      - acs:document-help:eip:普通模式下实现ECS绑定多EIP
Conditions:
  CreateEcs:
    Fn::Equals:
      - 创建ECS/Eip/Eni
      - Ref: EcsCondition
  HasEcs:
    Fn::Equals:
      - 使用已有ECS/Eip/Eni
      - Ref: EcsCondition
Description:
  zh-cn: 绑定多EIP至CentOS 7 ECS实例，通过辅助网卡实现弹性公网IP扩展。
  en: Bind multiple EIPs to a CentOS 7 ECS instance via secondary network interfaces
    to achieve Elastic Public IP expansion.
