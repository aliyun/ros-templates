ROSTemplateFormatVersion: '2015-09-01'
Description:
  zh-cn: 绑定多EIP至CentOS 7 ECS实例，通过辅助网卡实现弹性公网IP扩展。
  en: Bind multiple EIPs to a CentOS 7 ECS instance via secondary network interfaces
    to achieve Elastic Public IP expansion.
Conditions:
  CreateEcs:
    Fn::Equals:
    - 创建ECS/Eip/Eni
    - Ref: EcsCondition
  HasEcs:
    Fn::Equals:
    - 使用已有ECS/Eip/Eni
    - Ref: EcsCondition
Parameters:
  EcsCondition:
    Type: String
    Label:
      zh-cn: 是否创建ECS/Eip/Eni
      en: Create an ECS/Eip/Eni
    Default: 使用已有ECS/Eip/Eni
    AllowedValues:
    - 使用已有ECS/Eip/Eni
    - 创建ECS/Eip/Eni
  EcsInstanceId:
    Type: String
    Label:
      en: ECS Instance ID
      zh-cn: ECS实例ID
    AssociationProperty: ALIYUN::ECS::Instance::InstanceId
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${EcsCondition}
            - 创建ECS/Eip/Eni
    Default: null
  ZoneId:
    Type: String
    Label:
      zh-cn: 可用区ID
      en: Available Zone ID
    Description:
      zh-cn: 可用区ID。<br><b>注： <font color='blue'>选择可用区前请确认该可用区是否支持创建ECS资源的规格</font></b>
      en: Availability Zone ID,<br><b>note： <font color='blue'>Before selecting, please
        confirm that the Availability Zone supports the specification of creating
        ECS resources</font></b>
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${EcsCondition}
            - 使用已有ECS/Eip/Eni
    Default: null
  InstanceType:
    Type: String
    Label:
      zh-cn: 实例类型
      en: Instance Type
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      ZoneId: ${ZoneId}
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${EcsCondition}
            - 使用已有ECS/Eip/Eni
    Default: null
  SystemDiskCategory:
    Type: String
    Label:
      zh-cn: 系统磁盘类型
      en: System Disk Category
    Description:
      zh-cn: '<font color=''blue''><b>可选值：</b></font><br>[cloud_efficiency: <font
        color=''green''>高效云盘</font>]<br>[cloud_ssd: <font color=''green''>SSD云盘</font>]<br>[cloud_essd:
        <font color=''green''>ESSD云盘</font>]<br>[cloud: <font color=''green''>普通云盘</font>]<br>[ephemeral_ssd:
        <font color=''green''>本地SSD盘</font>]'
      en: '<font color=''blue''><b>Optional values:</b></font><br>[cloud_efficiency:
        <font color=''green''>Efficient Cloud Disk</font>]<br>[cloud_ssd: <font color=''green''>SSD
        Cloud Disk</font>]<br>[cloud_essd: <font color=''green''>ESSD Cloud Disk</font>]<br>[cloud:
        <font color=''green''>Cloud Disk</font>]<br>[ephemeral_ssd: <font color=''green''>Local
        SSD Cloud Disk</font>]'
    AssociationProperty: ALIYUN::ECS::Disk::SystemDiskCategory
    AssociationPropertyMetadata:
      InstanceType: ${InstanceType}
      ZoneId: ${ZoneId}
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${EcsCondition}
            - 使用已有ECS/Eip/Eni
    Default: null
  InstancePassword:
    Type: String
    Label:
      zh-cn: 实例密码
      en: Instance Password
    Description:
      zh-cn: 长度8-30，必须包含大写字母、小写字母、数字、特殊符号三个；<br>特殊字符包括：()`~!@#$%^&*_-+=|{}[]:;'<>,.?/
      en: The 8-30 long login password of instance, consists of the uppercase, lowercase
        letter and number. <br> special characters include()`~!@#$%^&*_-+=|{}[]:;'<>,.?/
    ConstraintDescription:
      zh-cn: 长度8-30，必须包含大写字母、小写字母、数字、特殊符号三种；特殊字符包括：()`~!@#$%^&*_-+=|{}[]:;' <>,.?/
      en: 'Length 8-30, must contain upper case letters, lower case letters, Numbers,
        special symbols three; special characters include: ()`~!@#$%^&*_-+=|{}[]:;''<>,.?/'
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${EcsCondition}
            - 使用已有ECS/Eip/Eni
    Default: null
    AllowedPattern: '[0-9A-Za-z\_\-&:;''<>,=%`~!@#\(\)\$\^\*\+\|\{\}\[\]\.\?\/]+$'
    MinLength: '8'
    MaxLength: '30'
    NoEcho: true
  ECSNetworkInterfaceId:
    Type: String
    Label:
      en: ECS Network Interface ID
      zh-cn: ECS弹性网卡ID
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${EcsCondition}
            - 创建ECS/Eip/Eni
    Default: null
  EipId1:
    Type: String
    Label:
      en: Elastic IP Address1 Instance ID
      zh-cn: 弹性公网IP1实例ID
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${EcsCondition}
            - 创建ECS/Eip/Eni
    Default: null
  EipId2:
    Type: String
    Label:
      en: Elastic IP Address2 Instance ID
      zh-cn: 弹性公网IP2实例ID
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${EcsCondition}
            - 创建ECS/Eip/Eni
    Default: null
  EipId3:
    Type: String
    Label:
      en: Elastic IP Address3 Instance ID
      zh-cn: 弹性公网IP3实例ID
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${EcsCondition}
            - 创建ECS/Eip/Eni
    Default: null
Resources:
  DS_Instances:
    Type: DATASOURCE::ECS::Instances
    Condition: HasEcs
    Properties:
      InstanceIds:
      - Ref: EcsInstanceId
  DS_NetworkInterfaces:
    Type: DATASOURCE::ECS::NetworkInterfaces
    Condition: HasEcs
    Properties:
      NetworkInterfaceIds:
      - Ref: ECSNetworkInterfaceId
  DS_Eip1:
    Type: DATASOURCE::EIP::Addresses
    Condition: HasEcs
    Properties:
      AllocationId:
        Ref: EipId1
  DS_Eip2:
    Type: DATASOURCE::EIP::Addresses
    Condition: HasEcs
    Properties:
      AllocationId:
        Ref: EipId2
  DS_Eip3:
    Type: DATASOURCE::EIP::Addresses
    Condition: HasEcs
    Properties:
      AllocationId:
        Ref: EipId3
  AssignPrivateIpAddresses:
    Type: ALIYUN::ECS::AssignPrivateIpAddresses
    Properties:
      NetworkInterfaceId:
        Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - EcsENI
          - NetworkInterfaceId
        - Ref: ECSNetworkInterfaceId
      SecondaryPrivateIpAddressCount: 2
  EipAssociationPrimaryPrivateIp:
    Type: ALIYUN::VPC::EIPAssociation
    Properties:
      InstanceId:
        Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - EcsENI
          - NetworkInterfaceId
        - Ref: ECSNetworkInterfaceId
      AllocationId:
        Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - Eip1
          - AllocationId
        - Ref: EipId1
      PrivateIpAddress:
        Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - EcsENI
          - PrivateIpAddress
        - Fn::Jq:
          - First
          - .[0].PrivateIpAddress
          - Fn::GetAtt:
            - DS_NetworkInterfaces
            - NetworkInterfaces
      Mode: NAT
    DependsOn:
    - AssignPrivateIpAddresses
  EipAssociationSecondaryPrivateIp1:
    Type: ALIYUN::VPC::EIPAssociation
    Properties:
      InstanceId:
        Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - EcsENI
          - NetworkInterfaceId
        - Ref: ECSNetworkInterfaceId
      AllocationId:
        Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - Eip2
          - AllocationId
        - Ref: EipId2
      PrivateIpAddress:
        Fn::Select:
        - '0'
        - Fn::GetAtt:
          - AssignPrivateIpAddresses
          - PrivateIpAddresses
      Mode: NAT
    DependsOn:
    - EipAssociationPrimaryPrivateIp
  EipAssociationSecondaryPrivateIp2:
    Type: ALIYUN::VPC::EIPAssociation
    Properties:
      InstanceId:
        Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - EcsENI
          - NetworkInterfaceId
        - Ref: ECSNetworkInterfaceId
      AllocationId:
        Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - Eip3
          - AllocationId
        - Ref: EipId3
      PrivateIpAddress:
        Fn::Select:
        - '1'
        - Fn::GetAtt:
          - AssignPrivateIpAddresses
          - PrivateIpAddresses
      Mode: NAT
    DependsOn:
    - EipAssociationSecondaryPrivateIp1
  EcsEniAttachment:
    Type: ALIYUN::ECS::NetworkInterfaceAttachment
    Properties:
      NetworkInterfaceId:
        Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - EcsENI
          - NetworkInterfaceId
        - Ref: ECSNetworkInterfaceId
      InstanceId:
        Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - EcsInstance
          - InstanceId
        - Ref: EcsInstanceId
    DependsOn:
    - EipAssociationPrimaryPrivateIp
    - EipAssociationSecondaryPrivateIp1
    - EipAssociationSecondaryPrivateIp2
  WaitConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  WaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Handle:
        Ref: WaitConditionHandle
      Timeout: 3720
      Count: 1
  SecurityGroupIngress_22:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Condition: HasEcs
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 22/22
    DependsOn:
    - EcsEniAttachment
  InitEcsEni:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
      - Fn::If:
        - CreateEcs
        - Fn::GetAtt:
          - EcsInstance
          - InstanceId
        - Ref: EcsInstanceId
      Type: RunShellScript
      Sync: true
      Timeout: 3600
      CommandContent:
        Fn::Sub:
        - "#!/bin/bash\nif [ ! -f .ros.provision ]; then\n  echo \"Name: 普通模式下实现ECS绑定多EIP（CentOS\
          \ 7）\" > .ros.provision\nfi\nname=$(grep \"^Name:\" .ros.provision | awk\
          \ -F':' '{print $2}' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')\n\
          if [[ \"$name\" != \"普通模式下实现ECS绑定多EIP（CentOS 7）\" ]]; then\n  echo \"当前实例已使用过\\\
          \"$name\\\"教程的一键配置，不能再使用本教程的一键配置\"\n  ${WaitConditionHandle.CurlCli} --data-binary\
          \ \"{\\\"status\\\": \\\"FAILURE\\\", \\\"reason\\\": \\\"The current instance\
          \ has already applied the configuration of the \\\\\\\"$name\\\\\\\" tutorial,\
          \ and the configuration of this tutorial can no longer be applied.\\\"}\"\
          \n  exit 0\nfi\nsecondary_eni=`ip address show | grep eth | grep DOWN |\
          \ awk -F: '{print $2}'`\nsecondary_eni_name=`eval echo \"$secondary_eni\"\
          `\nif [[ \"$secondary_eni_name\" != \"\" ]]; then\n  echo \"#########################\"\
          \n  echo \"# The secondary Eni is not fully configured\"\n  echo \"#########################\"\
          \n  secondary_eni_mac=`cat /sys/class/net/\"$secondary_eni_name\"/address`\n\
          \  echo \"DEVICE=$secondary_eni_name\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\"\n  echo \"BOOTPROTO=dhcp\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\"\n  echo \"ONBOOT=yes\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\"\n  echo \"TYPE=Ethernet\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\"\n  echo \"USERCTL=yes\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\"\n  echo \"PEERDNS=no\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\"\n  echo \"IPV6INIT=no\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\"\n  echo \"PERSISTENT_DHCLIENT=yes\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\"\n  echo \"HWADDR=$secondary_eni_mac\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\"\n  echo \"DEFROUTE=no\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\"\n  systemctl restart network\nelse\n    echo \"#########################\"\
          \n    echo \"# Secondary Eni has been configured\"\n    echo \"#########################\"\
          \nfi\nnetmask_address=`ifconfig \"$secondary_eni_name\"| grep netmask |\
          \ awk '{print $4}'`\necho \"DEVICE=$secondary_eni_name:0\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":0\necho \"TYPE=Ethernet\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":0\necho \"BOOTPROTO=static\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":0\necho \"ONBOOT=yes\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":0\necho \"IPADDR=${PrivateIpAddresses1}\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":0\necho \"NETMASK=$netmask_address\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":0\necho \"DEVICE=$secondary_eni_name:1\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":1\necho \"TYPE=Ethernet\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":1\necho \"BOOTPROTO=static\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":1\necho \"ONBOOT=yes\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":1\necho \"IPADDR=${PrivateIpAddresses2}\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":1\necho \"NETMASK=$netmask_address\" >> /etc/sysconfig/network-scripts/ifcfg-\"\
          $secondary_eni_name\":1\nsystemctl restart network\necho \"# Secondary Eni\
          \ PrivateIpAddresses has been configured\"\n${WaitConditionHandle.CurlCli}\
          \ --data-binary '{\"status\": \"SUCCESS\"}'\n"
        - PrivateIpAddresses1:
            Fn::Select:
            - '0'
            - Fn::GetAtt:
              - AssignPrivateIpAddresses
              - PrivateIpAddresses
          PrivateIpAddresses2:
            Fn::Select:
            - '1'
            - Fn::GetAtt:
              - AssignPrivateIpAddresses
              - PrivateIpAddresses
    DependsOn:
    - EcsEniAttachment
  EcsVpc:
    Type: ALIYUN::ECS::VPC
    Condition: CreateEcs
    Properties:
      CidrBlock: 192.168.0.0/16
  EcsVSwitch:
    Type: ALIYUN::ECS::VSwitch
    Condition: CreateEcs
    Properties:
      ZoneId:
        Ref: ZoneId
      VpcId:
        Ref: EcsVpc
      CidrBlock: 192.168.1.0/24
  EcsSecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Condition: CreateEcs
    Properties:
      VpcId:
        Ref: EcsVpc
      SecurityGroupIngress:
      - Priority: 1
        PortRange: 22/22
        NicType: internet
        SourceCidrIp: 0.0.0.0/0
        IpProtocol: tcp
  EcsInstance:
    Type: ALIYUN::ECS::Instance
    Condition: CreateEcs
    Properties:
      VpcId:
        Fn::GetAtt:
        - EcsVpc
        - VpcId
      VSwitchId:
        Ref: EcsVSwitch
      SecurityGroupId:
        Ref: EcsSecurityGroup
      ImageId: centos_7
      SystemDiskCategory:
        Ref: SystemDiskCategory
      AllocatePublicIP: false
      Password:
        Ref: InstancePassword
      InstanceType:
        Ref: InstanceType
  EcsENI:
    Type: ALIYUN::ECS::NetworkInterface
    Condition: CreateEcs
    Properties:
      VSwitchId:
        Ref: EcsVSwitch
      SecurityGroupId:
        Ref: EcsSecurityGroup
  Eip1:
    Type: ALIYUN::VPC::EIP
    Condition: CreateEcs
    Properties:
      InstanceChargeType: Postpaid
      InternetChargeType: PayByTraffic
  Eip2:
    Type: ALIYUN::VPC::EIP
    Condition: CreateEcs
    Properties:
      InstanceChargeType: Postpaid
      InternetChargeType: PayByTraffic
  Eip3:
    Type: ALIYUN::VPC::EIP
    Condition: CreateEcs
    Properties:
      InstanceChargeType: Postpaid
      InternetChargeType: PayByTraffic
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - EcsCondition
      - EcsInstanceId
      - ZoneId
      - InstanceType
      - SystemDiskCategory
      - InstancePassword
      - ECSNetworkInterfaceId
      - EipId1
      - EipId2
      - EipId3
    TemplateTags:
    - acs:document-help:eip:普通模式下实现ECS绑定多EIP
