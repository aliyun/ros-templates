ROSTemplateFormatVersion: '2015-09-01'
Description:
  zh-cn: 创建VPC、交换机、安全组，部署ECS实例并安装Node.js环境，配置安全组规则，提供HTTP服务。
  en: Create a Virtual Private Cloud (VPC), configure subnets, establish security
    groups, deploy Elastic Compute Service (ECS) instances, and set up the Node.js
    environment. Configure security group rules to permit traffic and enable provision
    of HTTP services.
Conditions:
  CreateInstance:
    Fn::Equals:
    - Ref: InstanceSource
    - CreateNew
  UseExistedInstance:
    Fn::Equals:
    - Ref: InstanceSource
    - UseExisted
Parameters:
  InstanceSource:
    Type: String
    Label:
      zh-cn: 实例来源
      en: Instance Source
    AssociationPropertyMetadata:
      ValueLabelMapping:
        CreateNew:
          zh-cn: 创建新实例
          en: Create New Instance
        UseExisted:
          zh-cn: 选择已有实例
          en: Select Existed Instance
    Default: CreateNew
    AllowedValues:
    - CreateNew
    - UseExisted
  ZoneId:
    Type: String
    Label:
      en: Availability Zone
      zh-cn: 可用区
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    AssociationPropertyMetadata:
      AutoSelectFirst: true
      Visible:
        Condition:
          Fn::Equals:
          - ${InstanceSource}
          - CreateNew
    Default: null
  ImageId:
    Type: String
    Label:
      en: Image of Instance
      zh-cn: 实例镜像
    AssociationProperty: ALIYUN::ECS::Image::ImageId
    AssociationPropertyMetadata:
      SupportedImageOwnerAlias:
      - system
      IsSupportCloudinit: true
      Visible:
        Condition:
          Fn::Equals:
          - ${InstanceSource}
          - CreateNew
    Default: aliyun_3_9_x64_20G_alibase_20231219.vhd
  InstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例类型
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      ZoneId: ${ZoneId}
      SpotStrategy: SpotAsPriceGo
      InstanceChargeType: PostPaid
      SystemDiskCategory: cloud_essd
      Visible:
        Condition:
          Fn::Equals:
          - ${InstanceSource}
          - CreateNew
    Default: null
  InstancePassword:
    Type: String
    Label:
      en: Instance Password
      zh-cn: 实例密码
    Description:
      en: Server login password, Length 8-30, must contain three(Capital letters,
        lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol
        in)
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, numbers,
        ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    AssociationProperty: ALIYUN::ECS::Instance::Password
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Equals:
          - ${InstanceSource}
          - CreateNew
    Default: null
    NoEcho: true
    Confirm: true
  EcsInstanceId:
    Type: String
    Label:
      en: ECS Instance ID
      zh-cn: ECS实例ID
    AssociationProperty: ALIYUN::ECS::Instance::InstanceId
    AssociationPropertyMetadata:
      Status: Running
      Visible:
        Condition:
          Fn::Equals:
          - ${InstanceSource}
          - UseExisted
    Default: null
  CommonName:
    Type: String
    Default: nodejs
Resources:
  Vpc:
    Type: ALIYUN::ECS::VPC
    Condition: CreateInstance
    Properties:
      CidrBlock: 192.168.0.0/16
      VpcName:
        Fn::Sub: ${CommonName}-vpc
  VSwitch:
    Type: ALIYUN::ECS::VSwitch
    Condition: CreateInstance
    Properties:
      ZoneId:
        Ref: ZoneId
      VpcId:
        Ref: Vpc
      CidrBlock: 192.168.0.0/24
      VSwitchName:
        Fn::Sub: ${CommonName}-vsw
  SecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Condition: CreateInstance
    Properties:
      VpcId:
        Ref: Vpc
      SecurityGroupName:
        Fn::Sub: ${CommonName}-sg
      SecurityGroupIngress:
      - PortRange: 22/22
        SourceCidrIp: 0.0.0.0/0
        IpProtocol: tcp
      - PortRange: 3389/3389
        SourceCidrIp: 0.0.0.0/0
        IpProtocol: tcp
      - PortRange: 80/80
        SourceCidrIp: 0.0.0.0/0
        IpProtocol: tcp
      - PortRange: -1/-1
        SourceCidrIp: 0.0.0.0/0
        IpProtocol: icmp
  EcsInstance:
    Type: ALIYUN::ECS::InstanceGroup
    Condition: CreateInstance
    Properties:
      ZoneId:
        Ref: ZoneId
      VpcId:
        Ref: Vpc
      VSwitchId:
        Ref: VSwitch
      SecurityGroupId:
        Ref: SecurityGroup
      ImageId:
        Ref: ImageId
      InstanceName:
        Fn::Sub: ${CommonName}-ecs
      InstanceType:
        Ref: InstanceType
      SystemDiskCategory: cloud_essd
      MaxAmount: 1
      InternetMaxBandwidthOut: 100
      SpotStrategy: SpotAsPriceGo
      Password:
        Ref: InstancePassword
  ModuleInstallNodeJs:
    Type: MODULE::ACS::OOS::Extension
    Properties:
      EcsInstanceIds:
      - Fn::If:
        - UseExistedInstance
        - Ref: EcsInstanceId
        - Ref: EcsInstance
      PackageName: ACS-Extension-node-1853370294850618
    Version: default
  NodeTest:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
      - Fn::If:
        - UseExistedInstance
        - Ref: EcsInstanceId
        - Ref: EcsInstance
      Type: RunShellScript
      Sync: true
      Timeout: 3600
      CommandContent:
        Fn::Sub: "#!/bin/bash\ncat << \"EOF\" > example.js\nconst http = require('http');\n\
          const hostname = '0.0.0.0';\nconst port = 3000;\nconst server = http.createServer((req,\
          \ res) => { \n    res.statusCode = 200;\n    res.setHeader('Content-Type',\
          \ 'text/plain');\n    res.end('Hello World\\n');\n}); \n\nserver.listen(port,\
          \ hostname, () => { \n    console.log(`Server running at http://${!hostname}:${!port}/`);\n\
          });\n\nEOF\nnohup node ~/example.js > output.log 2>&1 &"
    DependsOn: ModuleInstallNodeJs
  DsEcs:
    Type: DATASOURCE::ECS::Instances
    Properties:
      InstanceIds:
      - Fn::If:
        - UseExistedInstance
        - Ref: EcsInstanceId
        - Ref: EcsInstance
  SecurityGroupIngress_3000:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DsEcs
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 3000/3000
Outputs:
  EcsLoginAddress:
    Description:
      en: Ecs login address.
      zh-cn: ECS登录地址。
    Value:
      Fn::Sub:
      - https://ecs-workbench.aliyun.com/?from=EcsConsole&instanceType=ecs&regionId=${ALIYUN::Region}&instanceId=${InstanceId}
      - InstanceId:
          Fn::If:
          - UseExistedInstance
          - Ref: EcsInstanceId
          - Ref: EcsInstance
  Url:
    Description:
      en: test address.
      zh-cn: 测试访问地址。
    Value:
      Fn::Sub:
      - http://${PublicIp}:3000
      - PublicIp:
          Fn::Jq:
          - First
          - if .[0].PublicIpAddress != [] then .[0].PublicIpAddress[0] else .[0].EipAddress.IpAddress
            end
          - Fn::GetAtt:
            - DsEcs
            - Instances
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - InstanceSource
      - ZoneId
      - ImageId
      - InstanceType
      - InstancePassword
      - EcsInstanceId
    TemplateTags:
    - acs:document-help:ecs:部署Node.js环境
    Hidden:
    - CommonName
