ROSTemplateFormatVersion: '2015-09-01'
Description:
  zh-cn: 搭建CentOS 7 ECS实例的LNMP环境，配置VPC、安全组、安装Nginx、MySQL、PHP及安全规则，提供一键部署脚本。
  en: Set up an LNMP environment on a CentOS 7 Elastic Compute Service (ECS) instance,
    involving configuration of Virtual Private Cloud (VPC), security groups, installation
    of Nginx, MySQL, and PHP, along with implementation of security rules, and provision
    of a one-click deployment script.
Conditions:
  CreateInstance:
    Fn::Equals:
    - Ref: SelectInstance
    - false
Parameters:
  SelectInstance:
    Type: Boolean
    Label:
      en: Whether to select an existing instance
      zh-cn: 是否选择已有实例
    Default: true
  InstanceId:
    Type: String
    Label:
      en: ECS Instance ID
      zh-cn: ECS实例ID
    AssociationProperty: ALIYUN::ECS::Instance::InstanceId
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Equals:
          - ${SelectInstance}
          - true
    Default: null
  ZoneId:
    Type: String
    Label:
      en: Zone ID
      zh-cn: 可用区ID
    Description:
      en: The available zone ID, you should confirm the zone support ECS、VPC、VSwitch
        or not.
      zh-cn: 可用区ID，需确认所选可用区下是否支持ECS、VPC、VSwitch等资源。
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Equals:
          - ${SelectInstance}
          - false
    Default: null
  InstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例类型
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      ZoneId: ZoneId
      Visible:
        Condition:
          Fn::Equals:
          - ${SelectInstance}
          - false
    Default: null
  SystemDiskCategory:
    Type: String
    Label:
      en: System Disk Category
      zh-cn: 系统盘类型
    AssociationProperty: ALIYUN::ECS::Disk::SystemDiskCategory
    AssociationPropertyMetadata:
      ZoneId: ${ZoneId}
      InstanceType: ${InstanceType}
      Visible:
        Condition:
          Fn::Equals:
          - ${SelectInstance}
          - false
    Default: null
  Password:
    Type: String
    Label:
      en: Login Password
      zh-cn: 实例密码
    Description:
      en: 'The password must be 8 to 32 characters in length. <br>

        It must consist three of the the following character types: uppercase letters,
        lowercase letters, digits, and special characters. <br>

        Special characters include <span style="background:#E7E9EB;"><b>()`~!@#$%^&*_-+=|{}[]:;''<>,.?/</b></span>.<br>'
      zh-cn: 长度为8-30位，需包含大写字母、小写字母、特殊符号和数字中的三个，允许的特殊字符包括<span style="background:#E7E9EB;"><b>()`~!@#$%^&*_-+=|{}[]:;'<>,.?/</b></span>。
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Equals:
          - ${SelectInstance}
          - false
    Default: null
    AllowedPattern: '[0-9A-Za-z\_\-&:;''<>,=%`~!@#\(\)\$\^\*\+\|\{\}\[\]\.\?\/]+$'
    MinLength: 8
    MaxLength: 30
    NoEcho: true
  DbPassword:
    Type: String
    Label:
      en: MySQL Database Password
      zh-cn: MySQL数据库密码
    Description:
      en: "The password must be 8 to 32 characters in length. <br>\nIt must contain\
        \ the following character types: uppercase letters, lowercase letters, digits,\
        \ and special characters. <br> \nSpecial characters include <span style=\"\
        background:#E7E9EB;\"><b>!@#$%^&*()_+-=</b></span>.<br>\n<b>If you repeatedly\
        \ provision in this tutorial on the same ECS instance, make sure that the\
        \ MySQL database password is exactly the same as the password set when the\
        \ template was executed for the first time. Otherwise, the result of provisioning\
        \ is unavailable.</b>"
      zh-cn: "长度为8~32位，需包含大写字母、小写字母、特殊字符和数字，允许的特殊字符包括<span style=\"background:#E7E9EB;\"\
        ><b>!@#$%^&*()_+-=</b></span>。<br> \n<b>如果您在同一台ECS实例上重复执行本教程的一键配置模板，请确保MySQL数据库密码和第一次执行模板时设置的密码完全一致。否则一键配置结果不可用。</b>"
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])((?=.*[!@#\$%\^&\*\(\)\-\+])|(?=.*[_\.,:;\-\?]))[a-zA-Z0-9!@#\$%\^&\*\(\)\-\+_\.,:;\-\?]{8,32}$
    NoEcho: true
Resources:
  Vpc:
    Type: ALIYUN::ECS::VPC
    Condition: CreateInstance
    Properties:
      CidrBlock: 192.168.0.0/16
  SecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Condition: CreateInstance
    Properties:
      VpcId:
        Ref: Vpc
  VSwitch:
    Type: ALIYUN::ECS::VSwitch
    Condition: CreateInstance
    Properties:
      ZoneId:
        Ref: ZoneId
      VpcId:
        Ref: Vpc
      CidrBlock: 192.168.0.0/24
  InstanceGroup:
    Type: ALIYUN::ECS::InstanceGroup
    Condition: CreateInstance
    Properties:
      VpcId:
        Ref: Vpc
      VSwitchId:
        Ref: VSwitch
      SecurityGroupId:
        Ref: SecurityGroup
      ImageId: centos_7_8
      InstanceType:
        Ref: InstanceType
      SystemDiskCategory:
        Ref: SystemDiskCategory
      Password:
        Ref: Password
      IoOptimized: optimized
      MaxAmount: 1
  DS_Instances:
    Type: DATASOURCE::ECS::Instances
    Properties:
      InstanceIds:
        Fn::If:
        - CreateInstance
        - Fn::GetAtt:
          - InstanceGroup
          - InstanceIds
        - - Ref: InstanceId
  WaitConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  WaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Handle:
        Ref: WaitConditionHandle
      Timeout: 3720
      Count: 1
  SecurityGroupIngress_22:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 22/22
  SecurityGroupIngress_80:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 80/80
  SecurityGroupIngress_443:
    Type: ALIYUN::ECS::SecurityGroupIngress
    Properties:
      SecurityGroupId:
        Fn::Jq:
        - First
        - .[0].SecurityGroupIds[0]
        - Fn::GetAtt:
          - DS_Instances
          - Instances
      SourceCidrIp: 0.0.0.0/0
      IpProtocol: tcp
      NicType: intranet
      PortRange: 443/443
  InstallLnmp:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
        Fn::If:
        - CreateInstance
        - Fn::GetAtt:
          - InstanceGroup
          - InstanceIds
        - - Ref: InstanceId
      Type: RunShellScript
      Sync: true
      Timeout: 3600
      CommandContent:
        Fn::Sub: "#!/bin/bash\nif [ ! -f .ros.provision ]; then\n  echo \"Name: 手动部署LNMP环境（CentOS\
          \ 7）\" > .ros.provision\nfi\n\nname=$(grep \"^Name:\" .ros.provision | awk\
          \ -F':' '{print $2}' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')\n\
          if [[ \"$name\" != \"手动部署LNMP环境（CentOS 7）\" ]]; then\n  echo \"当前实例已使用过\\\
          \"$name\\\"教程的一键配置，不能再使用本教程的一键配置\"\n  ${WaitConditionHandle.CurlCli} --data-binary\
          \ \"{\\\"status\\\": \\\"FAILURE\\\", \\\"reason\\\": \\\"The current instance\
          \ has already applied the configuration of the \\\\\\\"$name\\\\\\\" tutorial,\
          \ and the configuration of this tutorial can no longer be applied.\\\"}\"\
          \n  exit 0\nfi\n\necho \"#########################\"\necho \"# Check Network\"\
          \necho \"#########################\"\nping -c 2 -W 2 aliyun.com > /dev/null\n\
          if [[ $? -ne 0 ]]; then\n  echo \"当前实例无法访问公网\"\n  ${WaitConditionHandle.CurlCli}\
          \ --data-binary \"{\\\"status\\\": \\\"FAILURE\\\", \\\"reason\\\": \\\"\
          The current instance cannot access the public network.\\\"}\"\n  exit 0\n\
          fi\n\nif ! grep -q \"^Step1: Prepare Environment$\" .ros.provision; then\n\
          \  echo \"#########################\"\n  echo \"# Prepare Environment\"\n\
          \  echo \"#########################\"\n  systemctl status firewalld\n  systemctl\
          \ stop firewalld\n  echo \"Step1: Prepare Environment\" >> .ros.provision\n\
          else\n  echo \"#########################\"\n  echo \"# Environment has been\
          \ ready\"\n  echo \"#########################\"\nfi\n\nif ! grep -q \"^Step2:\
          \ Install Nginx$\" .ros.provision; then\n  echo \"#########################\"\
          \n  echo \"# Install Nginx\"\n  echo \"#########################\"\n  yum\
          \ -y install nginx\n  nginx -v\n  echo \"Step2: Install Nginx\" >> .ros.provision\n\
          else\n  echo \"#########################\"\n  echo \"# Nginx has been installed\"\
          \n  echo \"#########################\"\nfi\n\nif ! grep -q \"^Step3: Install\
          \ MySQL$\" .ros.provision; then\n  echo \"#########################\"\n\
          \  echo \"# Install MySQL\"\n  echo \"#########################\"\n  rpm\
          \ -Uvh  https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm\n\
          \  yum -y install mysql-community-server --nogpgcheck\n  mysql -V\n  systemctl\
          \ start mysqld\n  systemctl enable mysqld\n  systemctl daemon-reload\n \
          \ echo \"Step3: Install MySQL\" >> .ros.provision\nelse\n  echo \"#########################\"\
          \n  echo \"# MySQL has been installed\"\n  echo \"#########################\"\
          \nfi\n\nif ! grep -q \"^Step4: Install PHP$\" .ros.provision; then\n  echo\
          \ \"#########################\"\n  echo \"# Install PHP\"\n  echo \"#########################\"\
          \n  yum install -y \\\n    https://mirrors.aliyun.com/ius/ius-release-el7.rpm\
          \ \\\n    https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm\n\
          \  rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n \
          \ yum -y install php70w-devel php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64\
          \ php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64\
          \  php70w-pdo.x86_64   php70w-mysqlnd  php70w-fpm php70w-opcache php70w-pecl-redis\
          \ php70w-pecl-mongodb\n  php -v\n  echo \"Step4: Install PHP\" >> .ros.provision\n\
          else\n  echo \"#########################\"\n  echo \"# PHP has been installed\"\
          \n  echo \"#########################\"\nfi\n\nif ! grep -q \"^Step4: Config\
          \ Nginx$\" .ros.provision; then\n  echo \"#########################\"\n\
          \  echo \"# Config Nginx\"\n  echo \"#########################\"\n  cp /etc/nginx/nginx.conf\
          \ /etc/nginx/nginx.conf.bak\n  cat > /etc/nginx/nginx.conf << \\EOF\n# For\
          \ more information on configuration, see:\n#   * Official English Documentation:\
          \ http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n\
          \nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\n\
          pid /run/nginx.pid;\n\n# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\n\
          include /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections\
          \ 1024;\n}\n\nhttp {\n    log_format  main  '$remote_addr - $remote_user\
          \ [$time_local] \"$request\" '\n                      '$status $body_bytes_sent\
          \ \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"\
          ';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile \
          \           on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n\
          \    keepalive_timeout   65;\n    types_hash_max_size 4096;\n\n    include\
          \             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\
          \n    # Load modular configuration files from the /etc/nginx/conf.d directory.\n\
          \    # See http://nginx.org/en/docs/ngx_core_module.html#include\n    #\
          \ for more information.\n    include /etc/nginx/conf.d/*.conf;\n\n    server\
          \ {\n        listen       80;\n        listen       [::]:80;\n        server_name\
          \  _;\n        root         /usr/share/nginx/html;\n\n        # Load configuration\
          \ files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\
          \n        location / {\n            index index.php index.html index.htm;\n\
          \        }\n\n        location ~ .php$ {\n            root /usr/share/nginx/html;\
          \    # 将/usr/share/nginx/html替换为您的网站根目录，本文使用/usr/share/nginx/html作为网站根目录。\n\
          \            fastcgi_pass 127.0.0.1:9000;   # Nginx通过本机的9000端口将PHP请求转发给PHP-FPM进行处理。\n\
          \            fastcgi_index index.php;\n            fastcgi_param  SCRIPT_FILENAME\
          \  $document_root$fastcgi_script_name;\n            include fastcgi_params;\
          \   # Nginx调用fastcgi接口处理PHP请求。\n        }\n\n        error_page 404 /404.html;\n\
          \        location = /404.html {\n        }\n\n        error_page 500 502\
          \ 503 504 /50x.html;\n        location = /50x.html {\n        }\n    }\n\
          \n# Settings for a TLS enabled server.\n#\n#    server {\n#        listen\
          \       443 ssl http2;\n#        listen       [::]:443 ssl http2;\n#   \
          \     server_name  _;\n#        root         /usr/share/nginx/html;\n#\n\
          #        ssl_certificate \"/etc/pki/nginx/server.crt\";\n#        ssl_certificate_key\
          \ \"/etc/pki/nginx/private/server.key\";\n#        ssl_session_cache shared:SSL:1m;\n\
          #        ssl_session_timeout  10m;\n#        ssl_ciphers HIGH:!aNULL:!MD5;\n\
          #        ssl_prefer_server_ciphers on;\n#\n#        # Load configuration\
          \ files for the default server block.\n#        include /etc/nginx/default.d/*.conf;\n\
          #\n#        error_page 404 /404.html;\n#            location = /40x.html\
          \ {\n#        }\n#\n#        error_page 500 502 503 504 /50x.html;\n#  \
          \          location = /50x.html {\n#        }\n#    }\n\n}\nEOF\n  systemctl\
          \ start nginx \n  systemctl enable nginx\n  echo \"Step4: Config Nginx\"\
          \ >> .ros.provision\nelse\n  echo \"#########################\"\n  echo\
          \ \"# Nginx has been configured\"\n  echo \"#########################\"\n\
          fi\n\nif ! grep -q \"^Step6: Config MySQL$\" .ros.provision; then\n  echo\
          \ \"#########################\"\n  echo \"# Config MySQL\"\n  echo \"#########################\"\
          \n  export MYSQL_PWD=`grep \"temporary password\" /var/log/mysqld.log |\
          \ awk '{print $NF}'`\n  mysqladmin -uroot password '${DbPassword}'\n  export\
          \ MYSQL_PWD='${DbPassword}'\n  mysql -uroot -e \"GRANT ALL PRIVILEGES ON\
          \ *.* TO 'root'@'%' IDENTIFIED BY '${DbPassword}'\"\n  echo \"Step6: Config\
          \ MySQL\" >> .ros.provision\nelse\n  echo \"#########################\"\n\
          \  echo \"# MySQL has been configured\"\n  echo \"#########################\"\
          \nfi\n\nif ! grep -q \"^Step7: Config PHP$\" .ros.provision; then\n  echo\
          \ \"#########################\"\n  echo \"# Config PHP\"\n  echo \"#########################\"\
          \n  echo \"<?php phpinfo(); ?>\" > /usr/share/nginx/html/phpinfo.php\n \
          \ systemctl start php-fpm\n  systemctl enable php-fpm\n  echo \"Step7: Config\
          \ MySQL\" >> .ros.provision\nelse\n  echo \"#########################\"\n\
          \  echo \"# PHP has been configured\"\n  echo \"#########################\"\
          \nfi\n\n${WaitConditionHandle.CurlCli} --data-binary '{\"status\": \"SUCCESS\"\
          }'"
    DependsOn:
    - SecurityGroupIngress_22
    - SecurityGroupIngress_443
    - SecurityGroupIngress_80
Outputs:
  NginxUrl:
    Description:
      en: Nginx Info Page.
      zh-cn: Nginx信息页面。
    Value:
      Fn::Sub:
      - http://${IP}
      - IP:
          Fn::Jq:
          - First
          - if .[0].PublicIpAddress != [] then .[0].PublicIpAddress[0] else .[0].EipAddress.IpAddress
            end
          - Fn::GetAtt:
            - DS_Instances
            - Instances
  PhpUrl:
    Description:
      en: PHP Info Page.
      zh-cn: PHP信息页面。
    Value:
      Fn::Sub:
      - http://${IP}/phpinfo.php
      - IP:
          Fn::Jq:
          - First
          - if .[0].PublicIpAddress != [] then .[0].PublicIpAddress[0] else .[0].EipAddress.IpAddress
            end
          - Fn::GetAtt:
            - DS_Instances
            - Instances
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - SelectInstance
      - InstanceId
      - ZoneId
      - InstanceType
      - SystemDiskCategory
      - Password
      Label:
        default: ECS
    - Parameters:
      - DbPassword
      Label:
        default: MySQL
    TemplateTags:
    - acs:document-help:ecs:手动部署LNMP环境（CentOS 7）
