ROSTemplateFormatVersion: '2015-09-01'
Transform: Aliyun::Terraform-v1.5
Description:
  zh-cn: 创建VPC、ECS、RDS、安全组及域名解析，配置Java环境与数据库，实现云上APP高效构建。
  en: Create a Virtual Private Cloud (VPC), Elastic Compute Service (ECS), 
    Relational Database Service (RDS), Security Groups, and Domain Name 
    Resolution, configure the Java environment and database, facilitating 
    efficient development of cloud-based applications.
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - zone_id
      - instance_type
      - ecs_instance_password
      Label:
        default:
          zh-cn: ECS 配置
          en: ECS Configuration
    - Parameters:
      - db_user_name
      - db_password
      - db_instance_class
      Label:
        default:
          zh-cn: RDS 数据库配置
          en: RDS Configuration
    - Parameters:
      - domain_name
      Label:
        default:
          zh-cn: 域名配置
          en: Domain Name Configuration
    TemplateTags:
    - acs:technical-solution:internet-application-development:移动开发秘籍：云上高效构建APP-tech_solu_104
    Hidden:
    - common_name
    - database_name
Parameters:
  common_name:
    Type: String
    Default: app
  zone_id:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    AssociationPropertyMetadata:
      AutoSelectFirst: true
    Label:
      en: Availability Zone
      zh-cn: 可用区
  instance_type:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      InstanceChargeType: PostPaid
      SystemDiskCategory: cloud_essd
      ZoneId: ${zone_id}
    Label:
      en: Instance Type
      zh-cn: 实例规格
  ecs_instance_password:
    NoEcho: true
    Type: String
    Description:
      en: >-
        Server login password, Length 8-30, must contain three(Capital letters,
        lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special
        symbol in)
      zh-cn: >-
        服务器登录密码，长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/
        中的特殊符号）
    Label:
      en: Instance Password
      zh-cn: 实例密码
    ConstraintDescription:
      en: >-
        Length 8-30, must contain three(Capital letters, lowercase letters,
        numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    AssociationProperty: ALIYUN::ECS::Instance::Password
  domain_name:
    Type: Json
    Label:
      en: Website domain name
      zh-cn: 域名
    AssociationProperty: ALIYUN::DomainName
    Default: 'null'
    Description:
      en: >-
        Please enter the subdomain name under the current account, such as example.aliyun.com.
        If it is a domestic region, you need to fill in the registered  domain name,
        otherwise the website will not be able to plan.
      zh-cn: >-
        请输入当前账号下的域名，例如www.aliyun.com。如果是境内地域则需要填写已完成备案的域名，否则会导致网站无法访问。
  db_user_name:
    Type: String
    ConstraintDescription:
      en: >-
        Consist of 2 to 32 characters of lowercase letters, underline.  Must begin
        with a letter and be end with an alphanumeric character
      zh-cn: >-
        由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。
    Label:
      zh-cn: RDS数据库账号
      en: RDS DB Username
    Default: app
    AllowedPattern: ^[a-z][a-z0-9_]{0,31}$
  db_password:
    NoEcho: true
    Type: String
    Description:
      en: >-
        RDS user password, Length 8-30, must contain three(Capital letters,
        lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special
        symbol in)
      zh-cn: >-
        数据库账号密码，长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/
        中的特殊符号）
    Label:
      en: RDS Instance Password
      zh-cn: RDS数据库密码
    ConstraintDescription:
      en: >-
        Length 8-30, must contain three(Capital letters, lowercase letters,
        numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    AssociationProperty: ALIYUN::RDS::Instance::AccountPassword
  database_name:
    Type: String
    ConstraintDescription:
      en: Consist of 2 to 32 characters of lowercase letters, underline.  Must 
        begin with a letter and be end with an alphanumeric character
      zh-cn: 由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。
    Label:
      zh-cn: RDS数据库账号
      en: RDS DB Username
    Default: app
    AllowedPattern: ^[a-z][a-z0-9_]{0,31}$
  db_instance_class:
    Type: String
    Label:
      en: RDS Instance Class
      zh-cn: RDS实例规格
    AssociationProperty: ALIYUN::RDS::Instance::InstanceType
    AssociationPropertyMetadata:
      ZoneId:
        Ref: zone_id
      EngineVersion: '8.0'
      DBInstanceStorageType: cloud_essd
      Engine: MySQL
      Category: Basic
      CommodityCode: bards
    Default: mysql.n2e.medium.1
Workspace:
  provider.tf: |-
    provider "alicloud" {
    }
  variable.tf: |
    variable "common_name" {
      description = "名称"
      type        = string
      default     = "app"
    }

    variable "zone_id" {
      description = "可用区"
      type        = string
      default     = "cn-hangzhou-k"
    }

    variable "instance_type" {
      description = "实例规格, [在售的实例规格族](https://help.aliyun.com/zh/ecs/user-guide/overview-of-instance-families)"
      type        = string
      default     = "ecs.g7.large"
    }

    variable "ecs_instance_password" {
      description = "服务器登录密码，长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.? 中的特殊符号）"
      type        = string
      default     = ""
      sensitive   = true
    }

    variable "domain_name" {
      description = "域名"
      type        = object({
        DomainPrefix = string
        DomainName = string
      })
      default = null
    }

    variable "db_user_name" {
      type        = string
      description = "数据库用户名，由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。"
      validation {
        condition     = can(regex("^[a-z][a-z0-9_]{0,31}$", var.db_user_name))
        error_message = "由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。"
      }
      default = "app"
    }

    variable "db_password" {
      description = "数据库账号密码，长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）"
      type        = string
      sensitive   = true
    }

    variable "database_name" {
      type        = string
      description = "数据名称，由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。"
      validation {
        condition     = can(regex("^[a-z][a-z0-9_]{0,31}$", var.database_name))
        error_message = "由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。"
      }
      default = "app"
    }

    variable "db_instance_class" {
      description = "RDS实例规格"
      type        = string
      default     = "mysql.n2.small.2c"
    }
  main.tf: |-
    resource "alicloud_vpc" "vpc" {
      vpc_name   = "${var.common_name}-vpc"
      cidr_block = "192.168.0.0/16"
    }

    resource "alicloud_vswitch" "vswitch" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.0.0/24"
      zone_id      = var.zone_id
      vswitch_name = "${var.common_name}-vsw"
    }

    resource "alicloud_security_group" "security_group" {
      security_group_name = "${var.common_name}-sg"
      vpc_id              = alicloud_vpc.vpc.id
    }

    resource "alicloud_security_group_rule" "security_group_ingress_443" {
      security_group_id = alicloud_security_group.security_group.id
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "443/443"
      cidr_ip           = "0.0.0.0/0"
    }

    resource "alicloud_security_group_rule" "security_group_ingress_80" {
      security_group_id = alicloud_security_group.security_group.id
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "80/80"
      cidr_ip           = "0.0.0.0/0"
    }

    resource "alicloud_security_group_rule" "security_group_ingress_3306" {
      security_group_id = alicloud_security_group.security_group.id
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "3306/3306"
      cidr_ip           = "0.0.0.0/0"
    }

    data "alicloud_images" "instance_image" {
      name_regex  = "^aliyun_3_9_x64_20G_*"
      most_recent = true
      owners      = "system"
      instance_type = var.instance_type
    }

    resource "alicloud_instance" "ecs_instance" {
      instance_name        = "${var.common_name}-ecs"
      image_id             = data.alicloud_images.instance_image.images[0].id
      instance_type        = var.instance_type
      security_groups      = [alicloud_security_group.security_group.id]
      vswitch_id           = alicloud_vswitch.vswitch.id
      system_disk_category = "cloud_essd"
      internet_max_bandwidth_out = 100
      password             = var.ecs_instance_password
    }

    resource "alicloud_db_instance" "rds_instance" {
      engine               = "MySQL"
      engine_version       = "8.0"
      instance_type        = var.db_instance_class
      instance_storage     = 40
      category             = "Basic"
      db_instance_storage_type = "cloud_essd"
      vpc_id               = alicloud_vpc.vpc.id
      vswitch_id           = alicloud_vswitch.vswitch.id
      security_group_ids   = [alicloud_security_group.security_group.id]
      security_ips         = ["192.168.0.0/24"]
    }

    resource "alicloud_rds_account" "create_db_user" {
      db_instance_id   = alicloud_db_instance.rds_instance.id
      account_name     = var.db_user_name
      account_password = var.db_password
      account_type     = "Super"
    }

    resource "alicloud_db_database" "rds_database" {
      name              = var.database_name
      description       = "${var.database_name} database"
      instance_id       = alicloud_db_instance.rds_instance.id
      character_set     = "utf8mb4"
    }

    locals {
      install_java_script = <<-SHELL
        #!/bin/bash
        # 环境变量配置
        export PATH=/usr/local/bin:$PATH

        echo "export APPLETS_RDS_ENDPOINT=${alicloud_db_instance.rds_instance.connection_string}" >> ~/.bashrc
        echo "export APPLETS_RDS_USER=${var.db_user_name}" >> ~/.bashrc
        echo "export APPLETS_RDS_PASSWORD=${var.db_password}" >> ~/.bashrc
        echo "export APPLETS_RDS_DB_NAME=${var.database_name}" >> ~/.bashrc
        source ~/.bashrc

        # 网络检查地址
        NETWORK_CHECk_ADDR="help-static-aliyun-doc.aliyuncs.com"

        function unsupported_system() {
            log_fatal 1 "Unsupported System: $1"
        }

        function log_info() {
            printf "%s [INFO] %s\n" "$(date '+%Y-%m-%d %H:%M:%S')" "$1"
        }

        function log_error() {
            printf "%s [ERROR] %s\n" "$(date '+%Y-%m-%d %H:%M:%S')" "$1"
        }

        function log_fatal() {
            printf "\n========================================================================\n"
            printf "%s [FATAL] %s\n" "$(date '+%Y-%m-%d %H:%M:%S')" "$2"
            printf "\n========================================================================\n"
            exit $1
        }

        function debug_exec(){
            local cmd="$@"
            log_info "$cmd"
            eval "$cmd"
            ret=$?
            echo ""
            log_info "$cmd, exit code: $ret"
            return $ret
        }

        function check_network_available() {
            log_info "ping $NETWORK_CHECk_ADDR ..."
            if ! debug_exec ping -c 4 $NETWORK_CHECk_ADDR; then
                log_fatal 2 "Could not connect to https://$NETWORK_CHECk_ADDR"
            fi
        }

        function install_java() {
            log_info "install java"
            yum upgrade & yum install java-1.8.0-openjdk-devel -y
        }

        function init_database() {
            log_info "install mysql 1.20.1"
            yum install -y mysql
            mysql -h $APPLETS_RDS_ENDPOINT -u $APPLETS_RDS_USER -p$APPLETS_RDS_PASSWORD < /data/script.sql
        }

        log_info "System Information:"
        if ! lsb_release -a; then
            unsupported_system
        fi;
        echo ""

        check_network_available

        mkdir -p /data
        cat <<"EOF" >> /data/script.sql
        -- script.sql
        USE ${var.database_name};
        CREATE TABLE `todo_list` (
          `id` bigint NOT NULL COMMENT 'id',
          `title` varchar(128) NOT NULL COMMENT 'title',
          `desc` text NOT NULL COMMENT 'description',
          `status` varchar(128) NOT NULL COMMENT 'status 未开始、进行中、已完成、已取消',
          `priority` varchar(128) NOT NULL COMMENT 'priority 高、中、低',
          `expect_time` datetime COMMENT 'expect time',
          `actual_completion_time` datetime COMMENT 'actual completion time',
          `gmt_created` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'create time',
          `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'modified time',
          PRIMARY KEY (`id`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
        ;
        INSERT INTO todo_list
        (id, title, `desc`, `status`, priority, expect_time)
        value(1,  "创建一个小程序", "使用阿里云解决方案快速搭建一个App应用", "进行中", "高", "2024-04-01 00:00:00")

        EOF

        if ! debug_exec install_java; then
            log_fatal 3 "install java failed"
        fi

        if ! debug_exec init_database; then
            log_fatal 4 "init database failed"
        fi
        SHELL
    }

    resource "alicloud_ecs_command" "install_java" {
      depends_on = [alicloud_db_database.rds_database]
      name        = "install-java-and-init-db"
      command_content = base64encode(local.install_java_script)
      description = "Install Java and Initialize Database"
      type        = "RunShellScript"
      working_dir = "/root"
    }

    resource "alicloud_ecs_invocation" "invoke_install_java" {
      instance_id = [alicloud_instance.ecs_instance.id]
      command_id  = alicloud_ecs_command.install_java.id
    }

    resource "alicloud_dns_record" "domain_record" {
      count = var.domain_name == null ? 0 : 1

      # 解析 domain_name JSON 字符串，提取 DomainName 字段
      name = var.domain_name.DomainName

      # 解析 domain_name JSON 字符串，提取 DomainPrefix 字段
      host_record = var.domain_name.DomainPrefix != "" && var.domain_name.DomainPrefix != null ? var.domain_name.DomainPrefix : "@"
      type        = "A"
      value       = alicloud_instance.ecs_instance.public_ip
    }
  output.tf: |-
    output "database_name" {
      description = "The name of database."
      value       = alicloud_db_database.rds_database.name
    }

    output "database_user_name" {
      description = "The name of database user."
      value       = alicloud_rds_account.create_db_user.account_name
    }

    output "database_endpoint" {
      description = "The connection address of database."
      value       = alicloud_db_instance.rds_instance.connection_string
    }

    output "ecs_login_address" {
      description = "Ecs login address"
      value       = "https://ecs-workbench.aliyun.com/?from=EcsConsole&instanceType=ecs&instanceId=${alicloud_instance.ecs_instance.id}"
    }
