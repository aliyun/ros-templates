ROSTemplateFormatVersion: '2015-09-01'
Locals:
  Repo:
    Value:
      Fn::Sub:
        - registry-${Region}-vpc.ack.aliyuncs.com/acs
        - Region:
            Ref: ALIYUN::Region
Parameters:
  CommonName:
    Type: String
    Default: HZ
  RandomName:
    AssociationProperty: AutoCompleteInput
    AssociationPropertyMetadata:
      Length: 6
      Prefix: dify-test-
      CharacterClasses:
        - Class: lowercase
          min: 1
    Type: String
    Label:
      zh-cn: 集群名称
      en: ACK Cluster Name
  ZoneId1:
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    AssociationPropertyMetadata:
      ExclusiveTo:
        - ZoneId2
    Type: String
    Description:
      zh-cn: 可用区ID。<br><b>注： <font color='blue'>选择可用区前请确认该可用区是否支持创建ECS资源的规格</font></b>
      en: Availability Zone ID,<br><b>note： <font color='blue'>Before selecting, please confirm that the Availability Zone supports the specification of creating ECS resources</font></b>
    Label:
      zh-cn: 主交换机可用区ID
      en: Available Zone ID
  ZoneId2:
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    AssociationPropertyMetadata:
      ExclusiveTo:
        - ZoneId1
    Type: String
    Description:
      zh-cn: 可用区ID。<br><b>注： <font color='blue'>选择可用区前请确认该可用区是否支持创建ECS资源的规格</font></b>
      en: Availability Zone ID,<br><b>note： <font color='blue'>Before selecting, please confirm that the Availability Zone supports the specification of creating ECS resources</font></b>
    Label:
      zh-cn: 从交换机可用区ID
      en: Available Zone ID
  AckNodeInstanceType:
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      InstanceChargeType: PostPaid
      SystemDiskCategory: cloud_essd
      Constraints:
        vCPU:
          - 8
          - 12
          - 16
          - 24
          - 32
          - 52
        Memory:
          - 16
          - 18
          - 20
          - 22
          - 24
          - 26
          - 28
          - 30
          - 32
    Type: CommaDelimitedList
    Label:
      zh-cn: Ack节点池实例类型
      en: Ack Node Instance Type
    Description:
      zh-cn: Worker 节点实例规格。<br><b>注： <font color='blue'>由于 Dify 系统启动的容器比较多，选择至少 8 vCPU、16 GiB 的规格，且建议选择至少两个以上的可用规格，否则可能面临资源不足。</font></b>
      en: Worker Instance Type,<br><b>note： <font color='blue'>Since Dify system starts a relatively large number of containers, it is recommended to choose a specification with at least 8 vCPUs and 16 GiB of memory. Otherwise, you may face resource insufficiency issues.</font></b>
    Default:
      - ecs.u1-c1m2.2xlarge
      - ecs.c8i.2xlarge
  LoginPassword:
    Type: String
    NoEcho: true
    Label:
      en: Ack Instance Password
      zh-cn: Ack实例密码
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
      - Parameters:
          - ZoneId1
          - ZoneId2
        Label:
          default:
            en: Network Configuration
            zh-cn: 网络基础配置
      - Parameters:
          - AckNodeInstanceType
          - LoginPassword
        Label:
          default:
            en: ACK Configuration
            zh-cn: ack配置
    TemplateTags:
      - acs:technical-solution:internet-application-development:使用Dify快速构建AI问答助手
    Hidden:
      - CommonName
      - RandomName
Outputs:
  ACKClusterId:
    Description:
      zh-cn: ACK集群ID。
      en: ACK Cluster Id.
    Value:
      Fn::GetAtt:
        - ManagedKubernetesCluster
        - ClusterId
  ACKClusterName:
    Description:
      zh-cn: ACK集群名称。
      en: ACK Cluster Name.
    Value:
      Ref: RandomName
Resources:
  EnableCloudACK:
    Type: ALIYUN::ROS::AutoEnableService
    Properties:
      ServiceName: CS
  EnableCloudNAS:
    Type: ALIYUN::ROS::AutoEnableService
    Properties:
      ServiceName: NAS
  AliyunOOSLifecycleHook4CSRole:
    Type: ALIYUN::RAM::Role
    Properties:
      RoleName: AliyunOOSLifecycleHook4CSRole
      Description: 系统运维管理OOS使用该角色访问您在容器服务 Kubernetes 版、ECS、PolarDB等服务中的资源。
      AssumeRolePolicyDocument:
        Version: '1'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - oos.aliyuncs.com
      MaxSessionDuration: 3600
      IgnoreExisting: true
      DeletionForce: true
      PolicyAttachments:
        System:
          - AliyunOOSLifecycleHook4CSRolePolicy
  WaitDifyClbConfigCompleted:
    Type: ALIYUN::ROS::Sleep
    DependsOn:
      - AckDify
    Properties:
      CreateDuration: 60
  SecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      SecurityGroupIngress:
        - Priority: 100
          PortRange: 80/80
          NicType: internet
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
      VpcId:
        Ref: VPC
      SecurityGroupName:
        Fn::Sub: SG_${CommonName}
  VSwitch1:
    Type: ALIYUN::ECS::VSwitch
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 192.168.1.0/24
      ZoneId:
        Ref: ZoneId1
      VSwitchName:
        Fn::Sub: VSW_${CommonName}
  VSwitch2:
    Type: ALIYUN::ECS::VSwitch
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 192.168.2.0/24
      ZoneId:
        Ref: ZoneId2
      VSwitchName:
        Fn::Sub: VSW_${CommonName}
  VPC:
    Type: ALIYUN::ECS::VPC
    DependsOn:
      - EnableCloudACK
      - EnableCloudNAS
    Properties:
      VpcName:
        Fn::Sub: VPC_${CommonName}
      CidrBlock: 192.168.0.0/16
  ManagedKubernetesCluster:
    DependsOn:
      - AliyunOOSLifecycleHook4CSRole
    Type: ALIYUN::CS::ManagedKubernetesCluster
    Properties:
      VpcId:
        Ref: VPC
      SecurityGroupId:
        Ref: SecurityGroup
      VSwitchIds:
        - Ref: VSwitch1
        - Ref: VSwitch2
      ClusterSpec: ack.pro.small
      WorkerSystemDiskCategory: cloud_essd
      LoginPassword:
        Ref: LoginPassword
      Name:
        Ref: RandomName
      Addons:
        - Name: ack-helm-manager
        - Name: csi-plugin
        - Name: csi-provisioner
        - Name: storage-operator
          Config: '{"CnfsOssEnable":"false","CnfsNasEnable":"true"}'
      NodePools:
        - NodePoolInfo:
            Name: default-nodepool
          ScalingGroup:
            ImageId: aliyun_3_x64_20G_alibase_20240819.vhd
            DesiredSize: 1
            VSwitchIds:
              - Ref: VSwitch1
              - Ref: VSwitch2
            InstanceTypes:
              Ref: AckNodeInstanceType
            SystemDiskSize: 120
            SystemDiskCategory: cloud_essd
            LoginPassword:
              Ref: LoginPassword
          KubernetesConfig:
            Runtime: containerd
            RuntimeVersion: 1.6.28
  Sleep:
    Type: ALIYUN::ROS::Sleep
    DependsOn:
      - ManagedKubernetesCluster
    Properties:
      CreateDuration: 60
  AckDify:
    Type: MODULE::ACS::ComputeNest::FluxOciHelmDeploy
    Version: v2
    DependsOn: Sleep
    Properties:
      Namespace: dify-system
      HelmChartUrl: oci://registry-cn-hangzhou.ack.aliyuncs.com/ack-demo/ack-dify:0.1.6
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      ReleaseName: ack-dify
      WaitUntil:
        - Kind: Deployment
          Name: ack-dify
          Namespace: dify-system
          JsonPath: $.status.readyReplicas
          Operator: NotEquals
          Value: '0'
          ValueType: Json
          FirstMatch: true
          Timeout: 600
      ChartValues:
        Fn::MergeMap:
          - image:
              api:
                tag: 0.15.3
                pullPolicy: IfNotPresent
              web:
                tag: 0.15.3
                pullPolicy: IfNotPresent
              sandbox:
                tag: 0.2.10
                pullPolicy: IfNotPresent
              proxy:
                tag: 1.27.0
                pullPolicy: IfNotPresent
              ssrfProxy:
                tag: latest
                pullPolicy: IfNotPresent
          - repository:
              Ref: Repo
            namespace: dify-system
            image:
              api:
                repo:
                  Ref: Repo
                image: dify-api
              web:
                repo:
                  Ref: Repo
                image: dify-web
              sandbox:
                repo:
                  Ref: Repo
                image: dify-sandbox
              proxy:
                repo:
                  Ref: Repo
                image: nginx
              ssrfProxy:
                repo:
                  Ref: Repo
                image: squid
            api:
              enabled: true
              replicas: 1
              resources: { }
              lifecycle: { }
              readinessProbe: { }
              livenessProbe: { }
              startupProbe: { }
              nodeSelector: { }
              affinity: { }
              tolerations: [ ]
              extraEnv:
                - name: CHECK_UPDATE_URL
                  value: ''
                - name: CODE_MAX_NUMBER
                  value: '9223372036854775807'
                - name: CODE_MIN_NUMBER
                  value: '-9223372036854775808'
                - name: CODE_MAX_STRING_LENGTH
                  value: '80000'
                - name: TEMPLATE_TRANSFORM_MAX_LENGTH
                  value: '80000'
                - name: CODE_MAX_STRING_ARRAY_LENGTH
                  value: '30'
                - name: CODE_MAX_OBJECT_ARRAY_LENGTH
                  value: '30'
                - name: CODE_MAX_NUMBER_ARRAY_LENGTH
                  value: '1000'
                - name: CODE_MAX_DEPTH
                  value: '5'
                - name: CODE_MAX_PRECISION
                  value: '20'
              service:
                port: 5001
                annotations: { }
                labels: { }
                clusterIP: ''
              logLevel: INFO
              url:
                consoleApi: ''
                consoleWeb: ''
                serviceApi: ''
                appApi: ''
                appWeb: ''
                files: ''
              mail:
                defaultSender: 'YOUR EMAIL FROM (eg: no-reply <no-reply@dify.ai>)'
                type: resend
                resend:
                  apiKey: xxxx
                  apiUrl: https://api.resend.com
                smtp:
                  server: smtp.server.com
                  port: 465
                  username: YOUR EMAIL
                  password: YOUR EMAIL PASSWORD
                  tls:
                    enabled: true
                    optimistic: false
              migration: true
              secretKey: sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
              persistence:
                mountPath: /app/api/storage
                annotations:
                  helm.sh/resource-policy: keep
                persistentVolumeClaim:
                  existingClaim: ''
                  storageClass: alibabacloud-cnfs-nas
                  accessModes: ReadWriteMany
                  size: 50Gi
                  subPath: ''
            worker:
              enabled: true
              replicas: 1
              resources: { }
              lifecycle: { }
              readinessProbe: { }
              livenessProbe: { }
              startupProbe: { }
              nodeSelector: { }
              affinity: { }
              tolerations: [ ]
              extraEnv: Null
              logLevel: INFO
              autoscaling:
                enabled: false
                minReplicas: 1
                maxReplicas: 5
                metrics:
                  - type: Resource
                    resource:
                      name: memory
                      target:
                        averageUtilization: 80
                        type: Utilization
            proxy:
              enabled: true
              replicas: 1
              resources: { }
              lifecycle: { }
              readinessProbe: { }
              livenessProbe: { }
              startupProbe: { }
              nodeSelector: { }
              affinity: { }
              tolerations: [ ]
              proxyConf: ''
              nginxConf: ''
              defaultConf: ''
              extraEnv: Null
              log:
                persistence:
                  enabled: false
                  mountPath: /var/log/nginx
                  annotations:
                    helm.sh/resource-policy: keep
                  persistentVolumeClaim:
                    existingClaim: ''
                    storageClass: ''
                    accessModes: ReadWriteMany
                    size: 20Gi
                    subPath: ''
              service:
                port: 80
                annotations: { }
                labels: { }
                clusterIP: ''
            web:
              enabled: true
              replicas: 1
              resources: { }
              lifecycle: { }
              readinessProbe: { }
              livenessProbe: { }
              startupProbe: { }
              nodeSelector: { }
              affinity: { }
              tolerations: [ ]
              extraEnv:
                - name: EDITION
                  value: SELF_HOSTED
              service:
                port: 3000
                annotations: { }
                labels: { }
                clusterIP: ''
            sandbox:
              enabled: true
              replicas: 1
              resources: { }
              lifecycle: { }
              readinessProbe: { }
              livenessProbe: { }
              startupProbe: { }
              nodeSelector: { }
              affinity: { }
              tolerations: [ ]
              extraEnv:
                - name: WORKER_TIMEOUT
                  value: '15'
              service:
                port: 8194
                annotations: { }
                labels: { }
                clusterIP: ''
              auth:
                apiKey: dify-sandbox
              privileged: false
            ssrfProxy:
              enabled: false
              replicas: 1
              resources: { }
              nodeSelector: { }
              affinity: { }
              tolerations: [ ]
              extraEnv: Null
              log:
                persistence:
                  enabled: false
                  mountPath: /var/log/squid
                  annotations:
                    helm.sh/resource-policy: keep
                  persistentVolumeClaim:
                    existingClaim: ''
                    storageClass: ''
                    accessModes: ReadWriteMany
                    size: 20Gi
                    subPath: ''
              service:
                port: 3128
                annotations: { }
                labels: { }
                clusterIP: ''
            postgresql:
              enabled: true
              name: postgres
              global:
                storageClass: ''
                postgresql:
                  auth:
                    postgresPassword: difyai123456
                    username: ''
                    password: ''
                    database: dify
              image:
                registry:
                  Ref: Repo
                repository: postgresql
                tag: 15.3.0-debian-11-r7
                pullPolicy: IfNotPresent
              architecture: replication
              primary:
                resources:
                  limits: { }
                  requests: { }
                persistence:
                  enabled: true
                  storageClass: alicloud-disk-topology-alltype
                  accessModes:
                    - ReadWriteOnce
                  size: 50Gi
                affinity: { }
                tolerations: [ ]
              readReplicas:
                name: read
                replicaCount: 1
                resources:
                  limits: { }
                  requests: { }
                persistence:
                  enabled: true
                  storageClass: alicloud-disk-topology-alltype
                  accessModes:
                    - ReadWriteOnce
                  size: 20Gi
                affinity: { }
                tolerations: [ ]
            weaviate:
              enabled: true
              image:
                registry:
                  Ref: Repo
                tag: 1.19.1
                repo: weaviate
                pullPolicy: IfNotPresent
                pullSecrets: [ ]
              command:
                - /bin/weaviate
              args:
                - '--host'
                - 0.0.0.0
                - '--port'
                - '8080'
                - '--scheme'
                - http
                - '--config-file'
                - /weaviate-config/conf.yaml
                - '--read-timeout=60s'
                - '--write-timeout=60s'
              initContainers:
                sysctlInitContainer:
                  enabled: true
                  sysctlVmMaxMapCount: 524288
                  image:
                    registry: docker.io
                    repo: alpine
                    tag: latest
                    pullPolicy: IfNotPresent
                extraInitContainers: { }
              replicas: 1
              resources: { }
              serviceAccountName: Null
              storage:
                size: 32Gi
                storageClassName: alicloud-disk-topology-alltype
              service:
                name: weaviate
                type: ClusterIP
                loadBalancerSourceRanges: [ ]
                clusterIP: Null
                annotations: { }
              startupProbe:
                enabled: false
                initialDelaySeconds: 300
                periodSeconds: 60
                failureThreshold: 50
                successThreshold: 1
                timeoutSeconds: 3
              livenessProbe:
                initialDelaySeconds: 900
                periodSeconds: 10
                failureThreshold: 30
                successThreshold: 1
                timeoutSeconds: 3
              readinessProbe:
                initialDelaySeconds: 3
                periodSeconds: 10
                failureThreshold: 3
                successThreshold: 1
                timeoutSeconds: 3
              terminationGracePeriodSeconds: 600
              authentication:
                anonymous_access:
                  enabled: false
                apikey:
                  enabled: true
                  allowed_keys:
                    - WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
                  users:
                    - hello@dify.ai
                oidc:
                  enabled: false
              authorization:
                admin_list:
                  enabled: true
                  users:
                    - hello@dify.ai
                  read_only_users: Null
              query_defaults:
                limit: 100
              debug: false
              env:
                CLUSTER_GOSSIP_BIND_PORT: 7000
                CLUSTER_DATA_BIND_PORT: 7001
                GOGC: 100
                PROMETHEUS_MONITORING_ENABLED: false
                QUERY_MAXIMUM_RESULTS: 100000
                TRACK_VECTOR_DIMENSIONS: false
                REINDEX_VECTOR_DIMENSIONS_AT_STARTUP: false
                AUTHENTICATION_APIKEY_ENABLED: 'true'
                AUTHENTICATION_APIKEY_ALLOWED_KEYS: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
                AUTHENTICATION_APIKEY_USERS: hello@dify.ai
                AUTHORIZATION_ADMINLIST_ENABLED: 'true'
                AUTHORIZATION_ADMINLIST_USERS: hello@dify.ai
              envSecrets: Null
              backups:
                filesystem:
                  enabled: false
                  envconfig:
                    BACKUP_FILESYSTEM_PATH: /tmp/backups
                s3:
                  enabled: false
                  serviceAccountName: Null
                  envconfig:
                    BACKUP_S3_BUCKET: weaviate-backups
                  secrets: { }
                  envSecrets: { }
                gcs:
                  enabled: false
                  envconfig:
                    BACKUP_GCS_BUCKET: weaviate-backups
                  secrets: { }
                  envSecrets: { }
                azure:
                  enabled: false
                  envconfig:
                    BACKUP_AZURE_CONTAINER: weaviate-backups
                  secrets: { }
                  envSecrets: { }
              modules:
                default_vectorizer_module: none
              custom_config_map:
                enabled: false
                name: custom-config
              annotations: Null
              nodeSelector: Null
              tolerations: Null
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - weight: 1
                      podAffinityTerm:
                        topologyKey: kubernetes.io/hostname
                        labelSelector:
                          matchExpressions:
                            - key: app
                              operator: In
                              values:
                                - weaviate
            service:
              type: LoadBalancer
              port: 80
              annotations:
                service.beta.kubernetes.io/alibaba-cloud-loadbalancer-address-type: internet
                service.beta.kubernetes.io/alibaba-cloud-loadbalancer-instance-charge-type: PayByCLCU
            ingress:
              enabled: true
              className: 'nginx'
              annotations: { }
              hosts:
                - host: dify-example.local
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: ack-dify
                          port: 80
              tls: []
            resources: { }
            nodeSelector: { }
            tolerations: [ ]
            affinity: { }
            redis:
              enabled: true
              global:
                imageRegistry: ''
                imagePullSecrets: [ ]
                storageClass: ''
                redis:
                  password: ''
              kubeVersion: ''
              nameOverride: ''
              fullnameOverride: ''
              commonLabels: { }
              commonAnnotations: { }
              secretAnnotations: { }
              clusterDomain: cluster.local
              extraDeploy: [ ]
              useHostnames: true
              nameResolutionThreshold: 5
              nameResolutionTimeout: 5
              diagnosticMode:
                enabled: false
                command:
                  - sleep
                args:
                  - infinity
              image:
                registry:
                  Ref: Repo
                repository: redis
                tag: 6.2.7-debian-11-r11
                digest: ''
                pullPolicy: IfNotPresent
                pullSecrets: [ ]
                debug: false
              architecture: replication
              auth:
                enabled: true
                sentinel: true
                password: difyai123456
                existingSecret: ''
                existingSecretPasswordKey: ''
                usePasswordFiles: false
              commonConfiguration: |-
                # Enable AOF https://redis.io/topics/persistence#append-only-file
                appendonly yes
                # Disable RDB persistence, AOF persistence already enabled.
                save ""
              existingConfigmap: ''
              master:
                count: 1
                configuration: ''
                disableCommands:
                  - FLUSHDB
                  - FLUSHALL
                command: [ ]
                args: [ ]
                preExecCmds: [ ]
                extraFlags: [ ]
                extraEnvVars: [ ]
                extraEnvVarsCM: ''
                extraEnvVarsSecret: ''
                containerPorts:
                  redis: 6379
                startupProbe:
                  enabled: false
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 5
                livenessProbe:
                  enabled: true
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 5
                readinessProbe:
                  enabled: true
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  timeoutSeconds: 1
                  successThreshold: 1
                  failureThreshold: 5
                customStartupProbe: { }
                customLivenessProbe: { }
                customReadinessProbe: { }
                resources:
                  limits: { }
                  requests: { }
                podSecurityContext:
                  enabled: true
                  fsGroup: 1001
                containerSecurityContext:
                  enabled: true
                  runAsUser: 1001
                kind: StatefulSet
                schedulerName: ''
                updateStrategy:
                  type: RollingUpdate
                minReadySeconds: 0
                priorityClassName: ''
                hostAliases: [ ]
                podLabels: { }
                podAnnotations: { }
                shareProcessNamespace: false
                podAffinityPreset: ''
                podAntiAffinityPreset: soft
                nodeAffinityPreset:
                  type: ''
                  key: ''
                  values: [ ]
                affinity: { }
                nodeSelector: { }
                tolerations: [ ]
                topologySpreadConstraints: [ ]
                dnsPolicy: ''
                dnsConfig: { }
                lifecycleHooks: { }
                extraVolumes: [ ]
                extraVolumeMounts: [ ]
                sidecars: [ ]
                initContainers: [ ]
                persistence:
                  enabled: true
                  medium: ''
                  sizeLimit: ''
                  path: /data
                  subPath: ''
                  subPathExpr: ''
                  storageClass: alicloud-disk-topology-alltype
                  accessModes:
                    - ReadWriteOnce
                  size: 20Gi
                  annotations: { }
                  labels: { }
                  selector: { }
                  dataSource: { }
                  existingClaim: ''
                service:
                  type: ClusterIP
                  ports:
                    redis: 6379
                  nodePorts:
                    redis: ''
                  externalTrafficPolicy: Cluster
                  extraPorts: [ ]
                  internalTrafficPolicy: Cluster
                  clusterIP: ''
                  loadBalancerIP: ''
                  loadBalancerSourceRanges: [ ]
                  externalIPs: [ ]
                  annotations: { }
                  sessionAffinity: None
                  sessionAffinityConfig: { }
                terminationGracePeriodSeconds: 30
                serviceAccount:
                  create: false
                  name: ''
                  automountServiceAccountToken: true
                  annotations: { }
              replica:
                replicaCount: 3
                configuration: ''
                disableCommands:
                  - FLUSHDB
                  - FLUSHALL
                command: [ ]
                args: [ ]
                preExecCmds: [ ]
                extraFlags: [ ]
                extraEnvVars: [ ]
                extraEnvVarsCM: ''
                extraEnvVarsSecret: ''
                externalMaster:
                  enabled: false
                  host: ''
                  port: 6379
                containerPorts:
                  redis: 6379
                startupProbe:
                  enabled: true
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 22
                livenessProbe:
                  enabled: true
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 5
                readinessProbe:
                  enabled: true
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  timeoutSeconds: 1
                  successThreshold: 1
                  failureThreshold: 5
                customStartupProbe: { }
                customLivenessProbe: { }
                customReadinessProbe: { }
                resources:
                  limits: { }
                  requests: { }
                podSecurityContext:
                  enabled: true
                  fsGroup: 1001
                containerSecurityContext:
                  enabled: true
                  runAsUser: 1001
                schedulerName: ''
                updateStrategy:
                  type: RollingUpdate
                minReadySeconds: 0
                priorityClassName: ''
                podManagementPolicy: ''
                hostAliases: [ ]
                podLabels: { }
                podAnnotations: { }
                shareProcessNamespace: false
                podAffinityPreset: ''
                podAntiAffinityPreset: soft
                nodeAffinityPreset:
                  type: ''
                  key: ''
                  values: [ ]
                affinity: { }
                nodeSelector: { }
                tolerations: [ ]
                topologySpreadConstraints: [ ]
                dnsPolicy: ''
                dnsConfig: { }
                lifecycleHooks: { }
                extraVolumes: [ ]
                extraVolumeMounts: [ ]
                sidecars: [ ]
                initContainers: [ ]
                persistence:
                  enabled: true
                  medium: ''
                  sizeLimit: ''
                  path: /data
                  subPath: ''
                  subPathExpr: ''
                  storageClass: alicloud-disk-topology-alltype
                  accessModes:
                    - ReadWriteOnce
                  size: 20Gi
                  annotations: { }
                  labels: { }
                  selector: { }
                  dataSource: { }
                  existingClaim: ''
                service:
                  type: ClusterIP
                  ports:
                    redis: 6379
                  nodePorts:
                    redis: ''
                  externalTrafficPolicy: Cluster
                  internalTrafficPolicy: Cluster
                  extraPorts: [ ]
                  clusterIP: ''
                  loadBalancerIP: ''
                  loadBalancerSourceRanges: [ ]
                  annotations: { }
                  sessionAffinity: None
                  sessionAffinityConfig: { }
                terminationGracePeriodSeconds: 30
                autoscaling:
                  enabled: false
                  minReplicas: 1
                  maxReplicas: 11
                  targetCPU: ''
                  targetMemory: ''
                serviceAccount:
                  create: false
                  name: ''
                  automountServiceAccountToken: true
                  annotations: { }
              sentinel:
                enabled: false
                image:
                  registry: docker.io
                  repository: bitnami/redis-sentinel
                  tag: 7.0.11-debian-11-r10
                  digest: ''
                  pullPolicy: IfNotPresent
                  pullSecrets: [ ]
                  debug: false
                annotations: { }
                masterSet: mymaster
                quorum: 2
                getMasterTimeout: 220
                automateClusterRecovery: false
                redisShutdownWaitFailover: true
                downAfterMilliseconds: 60000
                failoverTimeout: 180000
                parallelSyncs: 1
                configuration: ''
                command: [ ]
                args: [ ]
                preExecCmds: [ ]
                extraEnvVars: [ ]
                extraEnvVarsCM: ''
                extraEnvVarsSecret: ''
                externalMaster:
                  enabled: false
                  host: ''
                  port: 6379
                containerPorts:
                  sentinel: 26379
                startupProbe:
                  enabled: true
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 22
                livenessProbe:
                  enabled: true
                  initialDelaySeconds: 20
                  periodSeconds: 10
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 6
                readinessProbe:
                  enabled: true
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  timeoutSeconds: 1
                  successThreshold: 1
                  failureThreshold: 6
                customStartupProbe: { }
                customLivenessProbe: { }
                customReadinessProbe: { }
                persistence:
                  enabled: true
                  storageClass: alicloud-disk-topology-alltype
                  accessModes:
                    - ReadWriteOnce
                  size: 20Gi
                  annotations: { }
                  labels: { }
                  selector: { }
                  dataSource: { }
                  medium: ''
                  sizeLimit: ''
                resources:
                  limits: { }
                  requests: { }
                containerSecurityContext:
                  enabled: true
                  runAsUser: 1001
                lifecycleHooks: { }
                extraVolumes: [ ]
                extraVolumeMounts: [ ]
                service:
                  type: ClusterIP
                  ports:
                    redis: 6379
                    sentinel: 26379
                  nodePorts:
                    redis: ''
                    sentinel: ''
                  externalTrafficPolicy: Cluster
                  extraPorts: [ ]
                  clusterIP: ''
                  loadBalancerIP: ''
                  loadBalancerSourceRanges: [ ]
                  annotations: { }
                  sessionAffinity: None
                  sessionAffinityConfig: { }
                  headless:
                    annotations: { }
                terminationGracePeriodSeconds: 30
              serviceBindings:
                enabled: false
              networkPolicy:
                enabled: false
                allowExternal: true
                extraIngress: [ ]
                extraEgress: [ ]
                ingressNSMatchLabels: { }
                ingressNSPodMatchLabels: { }
              podSecurityPolicy:
                create: false
                enabled: false
              rbac:
                create: false
                rules: [ ]
              serviceAccount:
                create: true
                name: ''
                automountServiceAccountToken: true
                annotations: { }
              pdb:
                create: false
                minAvailable: 1
                maxUnavailable: ''
              tls:
                enabled: false
                authClients: true
                autoGenerated: false
                existingSecret: ''
                certificatesSecret: ''
                certFilename: ''
                certKeyFilename: ''
                certCAFilename: ''
                dhParamsFilename: ''
              metrics:
                enabled: false
                image:
                  registry: docker.io
                  repository: bitnami/redis-exporter
                  tag: 1.50.0-debian-11-r13
                  digest: ''
                  pullPolicy: IfNotPresent
                  pullSecrets: [ ]
                startupProbe:
                  enabled: false
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 5
                livenessProbe:
                  enabled: true
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 5
                readinessProbe:
                  enabled: true
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  successThreshold: 1
                  failureThreshold: 3
                customStartupProbe: { }
                customLivenessProbe: { }
                customReadinessProbe: { }
                command: [ ]
                redisTargetHost: localhost
                extraArgs: { }
                extraEnvVars: [ ]
                containerSecurityContext:
                  enabled: true
                  runAsUser: 1001
                extraVolumes: [ ]
                extraVolumeMounts: [ ]
                resources:
                  limits: { }
                  requests: { }
                podLabels: { }
                podAnnotations:
                  prometheus.io/scrape: 'true'
                  prometheus.io/port: '9121'
                service:
                  type: ClusterIP
                  port: 9121
                  externalTrafficPolicy: Cluster
                  extraPorts: [ ]
                  loadBalancerIP: ''
                  loadBalancerSourceRanges: [ ]
                  annotations: { }
                  clusterIP: ''
                serviceMonitor:
                  enabled: false
                  namespace: ''
                  interval: 30s
                  scrapeTimeout: ''
                  relabellings: [ ]
                  metricRelabelings: [ ]
                  honorLabels: false
                  additionalLabels: { }
                  podTargetLabels: [ ]
                prometheusRule:
                  enabled: false
                  namespace: ''
                  additionalLabels: { }
                  rules: [ ]
              volumePermissions:
                enabled: false
                image:
                  registry: docker.io
                  repository: bitnami/bitnami-shell
                  tag: 11-debian-11-r118
                  digest: ''
                  pullPolicy: IfNotPresent
                  pullSecrets: [ ]
                resources:
                  limits: { }
                  requests: { }
                containerSecurityContext:
                  runAsUser: 0
              sysctl:
                enabled: false
                image:
                  registry: docker.io
                  repository: bitnami/bitnami-shell
                  tag: 11-debian-11-r118
                  digest: ''
                  pullPolicy: IfNotPresent
                  pullSecrets: [ ]
                command: [ ]
                mountHostSys: false
                resources:
                  limits: { }
                  requests: { }
              useExternalDNS:
                enabled: false
                suffix: ''
                annotationKey: external-dns.alpha.kubernetes.io/
                additionalAnnotations: { }
            externalAliyunOSS:
              enabled: false
              endpoint: ''
              bucketName: ''
              accessKey: ''
              secretKey: ''
              region: ''
              authVersion: v4
              path: your-path
            externalS3:
              enabled: false
              endpoint: https://xxx.r2.cloudflarestorage.com
              accessKey: ak-difyai
              secretKey: sk-difyai
              useSSL: false
              bucketName: difyai
              rootPath: ''
              useIAM: false
              iamEndpoint: ''
            externalAzureBlobStorage:
              enabled: false
              url: https://<your_account_name>.blob.core.windows.net
              account: https://xxx.r2.cloudflarestorage.com
              key: difyai
              container: difyai-container
            externalPostgres:
              enabled: false
              username: ''
              password: ''
              address: ''
              port: 5432
              dbName: dify
              maxOpenConns: 20
              maxIdleConns: 5
            externalRedis:
              enabled: false
              host: ''
              port: 6379
              username: ''
              password: ''
              useSSL: false
            externalWeaviate:
              enabled: false
              endpoint: http://weaviate:8080
              apiKey: your-weaviate-api-key
            externalQdrant:
              enabled: false
              endpoint: https://your-qdrant-cluster-url.qdrant.tech/
              apiKey: ak-difyai
              timeout: 20
              grpc:
                enabled: false
                port: 6334
            externalMilvus:
              enabled: false
              uri: http://milvus.example:19530
              token: your-milvus-token
              user: user
              password: Milvus
            externalPgvector:
              enabled: false
              host: gp-****-master.gpdb.rds.aliyuncs.com
              port: 5432
              user: user
              password: '****'
              dbName: dify
            externalAnalyticDB:
              enabled: false
              accessKey: ''
              secretKey: ''
              region:
                Ref: ALIYUN::Region
              instanceId: ''
              account: ''
              accountPassword: ''
              namespace: dify
              namespacePassword: difypassword
            externalTablestore:
              enabled: false
              endpoint: "https://instance-name.cn-hangzhou.ots.aliyuncs.com"
              instanceName: "instance-name"
              accessKeyId: "xxx"
              accessKeySecret: "xxx"

