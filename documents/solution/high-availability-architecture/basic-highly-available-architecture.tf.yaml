ROSTemplateFormatVersion: '2015-09-01'
Transform: Aliyun::Terraform-v1.5
Description:
  zh-cn: 创建双可用区VPC环境，配备ECS实例、ALB负载均衡、RDS高可用数据库，自动部署应用与数据初始化。
  en: Establish a dual-Availability-Zone VPC environment, equipped with ECS
    instances, ALB for load balancing, and a high-availability RDS database.
    Facilitate automatic application deployment and data initialization.
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - zone_id1
      - zone_id2
      - instance_type1
      - instance_type2
      - ecs_instance_password
      Label:
        default:
          zh-cn: ECS 配置
          en: ECS Configuration
    - Parameters:
      - db_user_name
      - db_password
      - db_instance_class
      Label:
        default:
          zh-cn: RDS 数据库配置
          en: RDS Configuration
    TemplateTags:
    - acs:technical-solution:high-availability-architecture:云上高可用架构-基础版-tech_solu_133
    Hidden:
    - common_name
    - database_name
Parameters:
  common_name:
    Type: String
    Default: high-availability
  zone_id1:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    AssociationPropertyMetadata:
      ExclusiveTo:
      - zone_id2
    Label:
      en: Availability Zone
      zh-cn: 可用区1
  zone_id2:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    AssociationPropertyMetadata:
      ExclusiveTo:
      - zone_id1
    Label:
      en: Availability Zone
      zh-cn: 可用区2
  instance_type1:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      InstanceChargeType: PostPaid
      SystemDiskCategory: cloud_essd
      ZoneId: ${zone_id1}
    Label:
      en: Instance Type
      zh-cn: 实例规格1
  instance_type2:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      InstanceChargeType: PostPaid
      SystemDiskCategory: cloud_essd
      ZoneId: ${zone_id2}
    Label:
      en: Instance Type
      zh-cn: 实例规格2
  ecs_instance_password:
    NoEcho: true
    Type: String
    Description:
      en: Server login password, Length 8-30, must contain three(Capital
        letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/
        Special symbol in)
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/
        中的特殊符号）
    Label:
      en: Instance Password
      zh-cn: 实例密码
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters,
        numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    AssociationProperty: ALIYUN::ECS::Instance::Password
    Default:
  db_user_name:
    Type: String
    ConstraintDescription:
      en: Consist of 2 to 32 characters of lowercase letters, underline.  Must
        begin with a letter and be end with an alphanumeric character
      zh-cn: 由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。
    Label:
      zh-cn: RDS数据库账号
      en: RDS DB Username
    Default: high_availability
    AllowedPattern: ^[a-z][a-z0-9_]{0,31}$
  db_password:
    NoEcho: true
    Type: String
    Description:
      en: RDS user password, Length 8-30, must contain three(Capital letters,
        lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special
        symbol in)
      zh-cn: 数据库账号密码，长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/
        中的特殊符号）
    Label:
      en: RDS Instance Password
      zh-cn: RDS数据库密码
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters,
        numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    AssociationProperty: ALIYUN::RDS::Instance::AccountPassword
  database_name:
    Type: String
    ConstraintDescription:
      en: Consist of 2 to 32 characters of lowercase letters, underline.  Must
        begin with a letter and be end with an alphanumeric character
      zh-cn: 由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。
    Label:
      zh-cn: RDS数据库账号
      en: RDS DB Username
    Default: high_availability
    AllowedPattern: ^[a-z][a-z0-9_]{0,31}$
  db_instance_class:
    Type: String
    Label:
      en: RDS Instance Class
      zh-cn: RDS实例规格
    AssociationProperty: ALIYUN::RDS::Instance::InstanceType
    AssociationPropertyMetadata:
      ZoneId: ${zone_id1}
      EngineVersion: '8.0'
      DBInstanceStorageType: cloud_essd
      Engine: MySQL
      Category: HighAvailability
      CommodityCode: bards
Workspace:
  provider.tf: |-
    provider "alicloud" {
    }
  variable.tf: |-
    variable "common_name" {
      type        = string
      description = "应用名称"
      default     = "high-availability"
    }

    variable "zone_id1" {
      type        = string
      default     = "cn-hangzhou-j"
      description = "指定第一个可用区ID"
    }

    variable "zone_id2" {
      type        = string
      default     = "cn-hangzhou-k"
      description = "指定第二个可用区ID"
    }

    variable "instance_type1" {
      type        = string
      default     = "ecs.g7.large"
      description = "定义第一台ECS实例的规格类型，[在售的实例规格族](https://help.aliyun.com/zh/ecs/user-guide/overview-of-instance-families)"
    }

    variable "instance_type2" {
      type        = string
      default     = "ecs.g7.large"
      description = "定义第二台ECS实例的规格类型，[在售的实例规格族](https://help.aliyun.com/zh/ecs/user-guide/overview-of-instance-families)"
    }

    variable "ecs_instance_password" {
      type        = string
      sensitive   = true
      description = "服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）"
    }

    variable "db_user_name" {
      type        = string
      description = "数据库用户名，由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。"
      validation {
        condition     = can(regex("^[a-z][a-z0-9_]{0,31}$", var.db_user_name))
        error_message = "由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。"
      }
      default = "high_availability"
    }

    variable "db_password" {
      type        = string
      sensitive   = true
      description = "数据库账号密码，长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）"
    }

    variable "database_name" {
      type        = string
      description = "数据名称，由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。"
      validation {
        condition     = can(regex("^[a-z][a-z0-9_]{0,31}$", var.database_name))
        error_message = "由 2 到 32 个小写字母组成，支持小写字母、数字和下划线，以小写字母开头。"
      }
      default = "high_availability"
    }

    variable "db_instance_class" {
      type        = string
      default     = "mysql.n2.small.2c"
      description = "RDS实例规格，[RDS MySQL标准版（原X86）主实例规格列表](https://help.aliyun.com/zh/rds/apsaradb-rds-for-mysql/primary-apsaradb-rds-for-mysql-instance-types)"
    }
  main.tf: |-
    resource "alicloud_vpc" "vpc" {
      vpc_name   = "${var.common_name}-VPC"
      cidr_block = "192.168.0.0/16"
    }

    resource "alicloud_vswitch" "vswitch1" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.1.0/24"
      zone_id      = var.zone_id1
      vswitch_name = "vsw-001"
    }

    resource "alicloud_vswitch" "vswitch2" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.2.0/24"
      zone_id      = var.zone_id2
      vswitch_name = "vsw-002"
    }

    resource "alicloud_vswitch" "vswitch3" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.3.0/24"
      zone_id      = var.zone_id1
      vswitch_name = "vsw-003"
    }

    resource "alicloud_vswitch" "vswitch4" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.4.0/24"
      zone_id      = var.zone_id2
      vswitch_name = "vsw-004"
    }

    resource "alicloud_vswitch" "vswitch5" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.5.0/24"
      zone_id      = var.zone_id1
      vswitch_name = "vsw-005"
    }

    resource "alicloud_vswitch" "vswitch6" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.6.0/24"
      zone_id      = var.zone_id2
      vswitch_name = "vsw-006"
    }

    resource "alicloud_security_group" "security_group" {
      security_group_name = "SecurityGroup_1"
      vpc_id              = alicloud_vpc.vpc.id
    }

    resource "alicloud_security_group_rule" "security_group_rule1" {
      security_group_id = alicloud_security_group.security_group.id
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "80/80"
      cidr_ip           = "0.0.0.0/0"
    }

    resource "alicloud_security_group_rule" "security_group_rule2" {
      security_group_id = alicloud_security_group.security_group.id
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "443/443"
      cidr_ip           = "0.0.0.0/0"
    }

    data "alicloud_images" "instance_image1" {
      name_regex    = "^aliyun_3_9_x64_20G_*"
      most_recent   = true
      owners        = "system"
      instance_type = var.instance_type1
    }

    resource "alicloud_instance" "ecs_instance1" {
      instance_name              = "${var.common_name}-ecs-1"
      image_id                   = data.alicloud_images.instance_image1.images[0].id
      instance_type              = var.instance_type1
      security_groups            = [alicloud_security_group.security_group.id]
      vswitch_id                 = alicloud_vswitch.vswitch1.id
      system_disk_category       = "cloud_essd"
      internet_max_bandwidth_out = 5
      password                   = var.ecs_instance_password
    }

    data "alicloud_images" "instance_image2" {
      name_regex    = "^aliyun_3_9_x64_20G_*"
      most_recent   = true
      owners        = "system"
      instance_type = var.instance_type2
    }

    resource "alicloud_instance" "ecs_instance2" {
      instance_name              = "${var.common_name}-ecs-2"
      image_id                   = data.alicloud_images.instance_image2.images[0].id
      instance_type              = var.instance_type2
      security_groups            = [alicloud_security_group.security_group.id]
      vswitch_id                 = alicloud_vswitch.vswitch2.id
      system_disk_category       = "cloud_essd"
      internet_max_bandwidth_out = 5
      password                   = var.ecs_instance_password
    }

    resource "alicloud_alb_load_balancer" "alb" {
      load_balancer_name     = "${var.common_name}-alb"
      load_balancer_edition  = "Basic"
      vpc_id                 = alicloud_vpc.vpc.id
      address_type           = "Internet"
      address_allocated_mode = "Fixed"

      load_balancer_billing_config {
        pay_type = "PayAsYouGo"
      }

      zone_mappings {
        zone_id    = var.zone_id1
        vswitch_id = alicloud_vswitch.vswitch3.id
      }

      zone_mappings {
        zone_id    = var.zone_id2
        vswitch_id = alicloud_vswitch.vswitch4.id
      }
    }

    resource "alicloud_alb_server_group" "alb_server_group" {
      server_group_name = "${var.common_name}-server-group"
      vpc_id            = alicloud_vpc.vpc.id
      protocol          = "HTTP"

      health_check_config {
        health_check_enabled      = true
        health_check_protocol     = "HTTP"
        health_check_path         = "/"
        health_check_codes        = ["http_2xx", "http_3xx", "http_4xx"]
        health_check_connect_port = 80
      }

      sticky_session_config {
        sticky_session_enabled = false
      }

      servers {
        port        = 80
        server_type = "Ecs"
        server_id   = alicloud_instance.ecs_instance1.id
        server_ip   = alicloud_instance.ecs_instance1.primary_ip_address
        weight      = 100
      }

      servers {
        port        = 80
        server_type = "Ecs"
        server_id   = alicloud_instance.ecs_instance2.id
        server_ip   = alicloud_instance.ecs_instance2.primary_ip_address
        weight      = 100
      }
    }

    resource "alicloud_alb_listener" "alb_listener" {
      listener_protocol = "HTTP"
      listener_port     = 80
      load_balancer_id  = alicloud_alb_load_balancer.alb.id

      default_actions {
        type = "ForwardGroup"
        forward_group_config {
          server_group_tuples {
            server_group_id = alicloud_alb_server_group.alb_server_group.id
          }
        }
      }
    }

    resource "alicloud_db_instance" "rds_instance" {
      engine             = "MySQL"
      engine_version     = "8.0"
      instance_type      = var.db_instance_class
      instance_storage   = 40
      vpc_id             = alicloud_vpc.vpc.id
      vswitch_id         = "${alicloud_vswitch.vswitch5.id},${alicloud_vswitch.vswitch6.id}"
      security_group_ids = [alicloud_security_group.security_group.id]
      zone_id            = var.zone_id1
      zone_id_slave_a    = var.zone_id2

    }

    resource "alicloud_db_database" "rds_database" {
      count         = (alicloud_db_instance.rds_instance.engine == "MySQL" ? 1 : 0)
      name          = var.database_name
      description   = "${var.database_name} database"
      instance_id   = alicloud_db_instance.rds_instance.id
      character_set = "utf8mb4"
    }

    resource "alicloud_rds_account" "create_db_user" {
      db_instance_id   = alicloud_db_instance.rds_instance.id
      account_name     = var.db_user_name
      account_password = var.db_password
      account_type     = "Super"
    }

    locals {
      prepare_data_script = <<-SHELL
        #!/bin/bash

        yum install -y mysql

        mkdir -p /data
        cat <<"EOF" >> /data/script.sql
        -- script.sql
        USE ${var.database_name};
        CREATE TABLE `todo_list` (
        `id` bigint NOT NULL COMMENT 'id',
        `title` varchar(128) NOT NULL COMMENT 'title',
        `desc` text NOT NULL COMMENT 'description',
        `status` varchar(128) NOT NULL COMMENT 'status 未开始、进行中、已完成、已取消',
        `priority` varchar(128) NOT NULL COMMENT 'priority 高、中、低',
        `expect_time` datetime COMMENT 'expect time',
        `actual_completion_time` datetime COMMENT 'actual completion time',
        `gmt_created` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'create time',
        `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'modified time',
        PRIMARY KEY (`id`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
        ;
        INSERT INTO todo_list
        (id, title, `desc`, `status`, priority, expect_time)
        value(1,  "创建一个应用", "使用阿里云解决方案搭建一个应用", "进行中", "高", "2024-04-01 00:00:00")
        EOF

        mysql -h${alicloud_db_instance.rds_instance.connection_string} -u${var.db_user_name} -p${var.db_password} < /data/script.sql
        SHELL

      install_app_script = <<-SHELL
        #!/bin/bash
        sudo yum -y install java-1.8.0-openjdk-devel.x86_64

        cat <<EOT >> ~/.bash_profile
        export APPLETS_RDS_ENDPOINT=${alicloud_db_instance.rds_instance.connection_string}
        export APPLETS_RDS_USER=${var.db_user_name}
        export APPLETS_RDS_PASSWORD=${var.db_password}
        export APPLETS_RDS_DB_NAME=${var.database_name}
        export APP_MANUAL_DEPLOY=false
        EOT
        source ~/.bash_profile
        wget https://help-static-aliyun-doc.aliyuncs.com/tech-solution/cloud-demo-0.0.2.jar
        nohup java -jar cloud-demo-0.0.2.jar > demo.log 2>&1 &
        SHELL
    }

    resource "alicloud_ecs_command" "prepare_data" {
      depends_on      = [alicloud_db_database.rds_database, alicloud_rds_account.create_db_user]
      name            = "tf-PrepareData"
      command_content = base64encode(local.prepare_data_script)
      description     = "create tables"
      type            = "RunShellScript"
      working_dir     = "/root"
    }

    resource "alicloud_ecs_invocation" "invoke_script" {
      instance_id = [alicloud_instance.ecs_instance1.id]
      command_id  = alicloud_ecs_command.prepare_data.id
    }


    resource "alicloud_ecs_command" "install_app" {
      depends_on      = [alicloud_ecs_invocation.invoke_script]
      name            = "tf-testAcc"
      command_content = base64encode(local.install_app_script)
      description     = "Install App"
      type            = "RunShellScript"
      working_dir     = "/root"
    }

    resource "alicloud_ecs_invocation" "invoke_app" {
      instance_id = [alicloud_instance.ecs_instance1.id, alicloud_instance.ecs_instance2.id]
      command_id  = alicloud_ecs_command.install_app.id
    }
  output.tf: |-
    output "WebUrl" {
      description = <<EOT
        {
          "zh-cn": "Web 访问地址。",
          "en": "The Addresses of Web."
        }
        EOT
      value       = format("http://%s", alicloud_alb_load_balancer.alb.dns_name)
    }
