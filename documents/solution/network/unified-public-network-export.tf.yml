ROSTemplateFormatVersion: '2015-09-01'
Transform: Aliyun::Terraform-v1.5
Metadata:
  ALIYUN::ROS::Interface:
    TemplateTags:
      - acs:technical-solution:unified-public-network-export:企业统一公网出口
Workspace:
  main.tf: |-
    # ------------------------------------------------------------------------------
    # 核心资源定义 (Main Resource Definitions)
    #
    # 本文件包含了模块的核心基础设施资源。
    # 这里的代码负责根据输入变量来创建和配置所有云资源。
    # ------------------------------------------------------------------------------

    # 配置阿里云提供商 (Provider)
    provider "alicloud" {
      # 资源部署地域
      region = "cn-hangzhou"
    }

    # 生成随机ID后缀
    resource "random_id" "suffix" {
      byte_length = 8
    }

    # 定义本地变量
    locals {
      common_name = random_id.suffix.id
    }

    # 创建VPC
    resource "alicloud_vpc" "vpc" {
      cidr_block = "192.168.0.0/16"
      vpc_name   = "${local.common_name}-vpc"
    }

    # 创建交换机
    resource "alicloud_vswitch" "vswitch1" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.1.0/24"
      zone_id      = var.region_zone_id1
      vswitch_name = "${local.common_name}-app1-vsw"
    }

    # 创建交换机
    resource "alicloud_vswitch" "vswitch2" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.2.0/24"
      zone_id      = var.region_zone_id2
      vswitch_name = "${local.common_name}-app2-vsw"
    }

    # 创建交换机（NAT网关）
    resource "alicloud_vswitch" "vswitch3" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.3.0/24"
      zone_id      = var.region_zone_id1
      vswitch_name = "${local.common_name}-pub-vsw"
    }

    # 创建安全组
    resource "alicloud_security_group" "security_group" {
      vpc_id              = alicloud_vpc.vpc.id
      security_group_name = "${local.common_name}-sg"
    }

    # 安全组规则：允许HTTPS
    resource "alicloud_security_group_rule" "allow_https" {
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "443/443"
      cidr_ip           = "0.0.0.0/0"
      security_group_id = alicloud_security_group.security_group.id
    }

    # 安全组规则：允许HTTP
    resource "alicloud_security_group_rule" "allow_http" {
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "80/80"
      cidr_ip           = "0.0.0.0/0"
      security_group_id = alicloud_security_group.security_group.id
    }

    # 安全组规则：允许SSH
    resource "alicloud_security_group_rule" "allow_workbench" {
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "22/22"
      cidr_ip           = "100.104.0.0/16"
      security_group_id = alicloud_security_group.security_group.id
    }

    # 创建ECS1
    resource "alicloud_instance" "ecs_instance1" {
      instance_name              = "${local.common_name}-ecs-1"
      image_id                   = "aliyun_3_9_x64_20G_alibase_20231219.vhd"
      instance_type              = var.instance_type1
      system_disk_category       = "cloud_essd"
      vswitch_id                 = alicloud_vswitch.vswitch1.id
      security_groups            = [alicloud_security_group.security_group.id]
      internet_max_bandwidth_out = 0
      password                   = var.instance_password
    }

    # 创建ECS2
    resource "alicloud_instance" "ecs_instance2" {
      instance_name              = "${local.common_name}-ecs-2"
      image_id                   = "aliyun_3_9_x64_20G_alibase_20231219.vhd"
      instance_type              = var.instance_type2
      system_disk_category       = "cloud_essd"
      vswitch_id                 = alicloud_vswitch.vswitch2.id
      security_groups            = [alicloud_security_group.security_group.id]
      internet_max_bandwidth_out = 0
      password                   = var.instance_password
    }

    # 创建NAT网关
    resource "alicloud_nat_gateway" "nat_gateway" {
      vpc_id           = alicloud_vpc.vpc.id
      vswitch_id       = alicloud_vswitch.vswitch3.id
      nat_type         = "Enhanced"
      nat_gateway_name = "${local.common_name}-ngw"
    }

    # 创建EIP
    resource "alicloud_eip" "eip" {
      bandwidth            = 200
      internet_charge_type = "PayByTraffic"
      isp                  = "BGP"
      deletion_protection  = false
    }

    # 绑定EIP到NAT网关
    resource "alicloud_eip_association" "eip_association" {
      instance_id   = alicloud_nat_gateway.nat_gateway.id
      allocation_id = alicloud_eip.eip.id
    }

    # 配置SNAT规则（vswitch1）
    resource "alicloud_snat_entry" "snat" {
      snat_table_id     = alicloud_nat_gateway.nat_gateway.snat_table_ids
      snat_ip           = alicloud_eip.eip.ip_address
      source_vswitch_id = alicloud_vswitch.vswitch1.id
      snat_entry_name   = "${local.common_name}-snat"
      depends_on        = [alicloud_eip_association.eip_association]
    }

    # 配置SNAT规则（vswitch2）
    resource "alicloud_snat_entry" "snat2" {
      snat_table_id     = alicloud_nat_gateway.nat_gateway.snat_table_ids
      snat_ip           = alicloud_eip.eip.ip_address
      source_vswitch_id = alicloud_vswitch.vswitch2.id
      snat_entry_name   = "${local.common_name}-snat2"
      depends_on        = [alicloud_eip_association.eip_association]
    }
  outputs.tf: |
    # ------------------------------------------------------------------------------
    # 模块输出值 (Module Outputs)
    #
    # 本文件定义了模块执行成功后返回给调用方的值。
    # 这些输出可以被其他 Terraform 配置引用，或在 apply 命令结束后显示给用户。
    # ------------------------------------------------------------------------------

    # ECS1登录地址
    output "ecs_login_address1" {
      description = "ECS1 登录地址"
      value       = format("https://ecs-workbench.aliyun.com/?from=EcsConsole&instanceType=ecs&regionId=%s&instanceId=%s", var.region, alicloud_instance.ecs_instance1.id)
    }

    # ECS2登录地址
    output "ecs_login_address2" {
      description = "ECS2 登录地址"
      value       = format("https://ecs-workbench.aliyun.com/?from=EcsConsole&instanceType=ecs&regionId=%s&instanceId=%s", var.region, alicloud_instance.ecs_instance2.id)
    }
  variables.tf: |-
    # ------------------------------------------------------------------------------
    # 模块输入变量 (Module Input Variables)
    #
    # 本文件定义了该 Terraform 模块所有可配置的输入变量。
    # 每个变量都包含了详细的 'description'，以说明其用途、格式和默认值逻辑。
    # 请参考这些描述来正确配置模块。
    # ------------------------------------------------------------------------------

    # 部署地域
    variable "region" {
      type        = string
      description = "地域"
      default     = "cn-hangzhou"
    }

    # 可用区1
    variable "region_zone_id1" {
      type        = string
      description = "可用区1"
      default     = "cn-hangzhou-j"
    }

    # 可用区2
    variable "region_zone_id2" {
      type        = string
      description = "可用区2"
      default     = "cn-hangzhou-k"
    }

    # ECS1实例规格
    variable "instance_type1" {
      type        = string
      description = "ECS1 实例规格"
      default     = "ecs.e-c1m2.large"
    }

    # ECS2实例规格
    variable "instance_type2" {
      type        = string
      description = "ECS2 实例规格"
      default     = "ecs.e-c1m2.large"
    }

    # ECS登录密码
    variable "instance_password" {
      type        = string
      sensitive   = true
      description = "服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）"
    }
