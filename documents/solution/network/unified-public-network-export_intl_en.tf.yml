ROSTemplateFormatVersion: '2015-09-01'
Transform: Aliyun::Terraform-v1.5
Metadata:
  ALIYUN::ROS::Interface:
    TemplateTags:
      - acs:technical-solution:unified-public-network-export:企业统一公网出口
Workspace:
  main.tf: |-
    # ------------------------------------------------------------------------------
    # Core Resource Definitions
    #
    # This file contains the core infrastructure resources for the module.
    # The code here is responsible for creating and configuring all cloud resources
    # based on input variables.
    # ------------------------------------------------------------------------------

    # Configure Alibaba Cloud Provider
    provider "alicloud" {
      # Resource deployment region
      region = "ap-southeast-1"
    }

    # Generate random ID suffix
    resource "random_id" "suffix" {
      byte_length = 8
    }

    # Define local variables
    locals {
      common_name = random_id.suffix.id
    }

    # Create VPC
    resource "alicloud_vpc" "vpc" {
      cidr_block = "192.168.0.0/16"
      vpc_name   = "${local.common_name}-vpc"
    }

    # Create vSwitch
    resource "alicloud_vswitch" "vswitch1" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.1.0/24"
      zone_id      = var.region_zone_id1
      vswitch_name = "${local.common_name}-app1-vsw"
    }

    # Create vSwitch
    resource "alicloud_vswitch" "vswitch2" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.2.0/24"
      zone_id      = var.region_zone_id2
      vswitch_name = "${local.common_name}-app2-vsw"
    }

    # Create vSwitch (NAT Gateway)
    resource "alicloud_vswitch" "vswitch3" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = "192.168.3.0/24"
      zone_id      = var.region_zone_id1
      vswitch_name = "${local.common_name}-pub-vsw"
    }

    # Create security group
    resource "alicloud_security_group" "security_group" {
      vpc_id              = alicloud_vpc.vpc.id
      security_group_name = "${local.common_name}-sg"
    }

    # Security group rule: Allow HTTPS
    resource "alicloud_security_group_rule" "allow_https" {
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "443/443"
      cidr_ip           = "0.0.0.0/0"
      security_group_id = alicloud_security_group.security_group.id
    }

    # Security group rule: Allow HTTP
    resource "alicloud_security_group_rule" "allow_http" {
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "80/80"
      cidr_ip           = "0.0.0.0/0"
      security_group_id = alicloud_security_group.security_group.id
    }

    # Security group rule: Allow SSH
    resource "alicloud_security_group_rule" "allow_workbench" {
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "22/22"
      cidr_ip           = "100.104.0.0/16"
      security_group_id = alicloud_security_group.security_group.id
    }

    # Create ECS1
    resource "alicloud_instance" "ecs_instance1" {
      instance_name              = "${local.common_name}-ecs-1"
      image_id                   = "aliyun_3_9_x64_20G_alibase_20231219.vhd"
      instance_type              = var.instance_type1
      system_disk_category       = "cloud_essd"
      vswitch_id                 = alicloud_vswitch.vswitch1.id
      security_groups            = [alicloud_security_group.security_group.id]
      internet_max_bandwidth_out = 0
      password                   = var.instance_password
    }

    # Create ECS2
    resource "alicloud_instance" "ecs_instance2" {
      instance_name              = "${local.common_name}-ecs-2"
      image_id                   = "aliyun_3_9_x64_20G_alibase_20231219.vhd"
      instance_type              = var.instance_type2
      system_disk_category       = "cloud_essd"
      vswitch_id                 = alicloud_vswitch.vswitch2.id
      security_groups            = [alicloud_security_group.security_group.id]
      internet_max_bandwidth_out = 0
      password                   = var.instance_password
    }

    # Create NAT Gateway
    resource "alicloud_nat_gateway" "nat_gateway" {
      vpc_id           = alicloud_vpc.vpc.id
      vswitch_id       = alicloud_vswitch.vswitch3.id
      nat_type         = "Enhanced"
      nat_gateway_name = "${local.common_name}-ngw"
    }

    # Create EIP
    resource "alicloud_eip" "eip" {
      bandwidth            = 200
      internet_charge_type = "PayByTraffic"
      isp                  = "BGP"
      deletion_protection  = false
    }

    # Associate EIP with NAT Gateway
    resource "alicloud_eip_association" "eip_association" {
      instance_id   = alicloud_nat_gateway.nat_gateway.id
      allocation_id = alicloud_eip.eip.id
    }

    # Configure SNAT rule (vswitch1)
    resource "alicloud_snat_entry" "snat" {
      snat_table_id     = alicloud_nat_gateway.nat_gateway.snat_table_ids
      snat_ip           = alicloud_eip.eip.ip_address
      source_vswitch_id = alicloud_vswitch.vswitch1.id
      snat_entry_name   = "${local.common_name}-snat"
      depends_on        = [alicloud_eip_association.eip_association]
    }

    # Configure SNAT rule (vswitch2)
    resource "alicloud_snat_entry" "snat2" {
      snat_table_id     = alicloud_nat_gateway.nat_gateway.snat_table_ids
      snat_ip           = alicloud_eip.eip.ip_address
      source_vswitch_id = alicloud_vswitch.vswitch2.id
      snat_entry_name   = "${local.common_name}-snat2"
      depends_on        = [alicloud_eip_association.eip_association]
    }
  outputs.tf: |
    # ------------------------------------------------------------------------------
    # Module Outputs
    #
    # This file defines the values returned to the caller after successful module
    # execution. These outputs can be referenced by other Terraform configurations
    # or displayed to users after the apply command completes.
    # ------------------------------------------------------------------------------

    # ECS1 login address
    output "ecs_login_address1" {
      description = "ECS1 login address"
      value       = format("https://ecs-workbench.aliyun.com/?from=EcsConsole&instanceType=ecs&regionId=%s&instanceId=%s", var.region, alicloud_instance.ecs_instance1.id)
    }

    # ECS2 login address
    output "ecs_login_address2" {
      description = "ECS2 login address"
      value       = format("https://ecs-workbench.aliyun.com/?from=EcsConsole&instanceType=ecs&regionId=%s&instanceId=%s", var.region, alicloud_instance.ecs_instance2.id)
    }
  variables.tf: |-
    # ------------------------------------------------------------------------------
    # Module Input Variables
    #
    # This file defines all configurable input variables for this Terraform module.
    # Each variable includes a detailed 'description' to explain its purpose, format,
    # and default value logic. Please refer to these descriptions to configure the
    # module correctly.
    # ------------------------------------------------------------------------------

    # Deployment region
    variable "region" {
      type        = string
      description = "Region"
      default     = "ap-southeast-1"
    }

    # Availability zone 1
    variable "region_zone_id1" {
      type        = string
      description = "Availability Zone 1"
      default     = "ap-southeast-1a"
    }

    # Availability zone 2
    variable "region_zone_id2" {
      type        = string
      description = "Availability Zone 2"
      default     = "ap-southeast-1b"
    }

    # ECS1 instance type
    variable "instance_type1" {
      type        = string
      description = "ECS1 instance type"
      default     = "ecs.e-c1m2.large"
    }

    # ECS2 instance type
    variable "instance_type2" {
      type        = string
      description = "ECS2 instance type"
      default     = "ecs.e-c1m2.large"
    }

    # ECS login password
    variable "instance_password" {
      type        = string
      sensitive   = true
      description = "Server login password, length 8-30, must contain three of the following: uppercase letters, lowercase letters, numbers, special symbols from ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/"
    }

