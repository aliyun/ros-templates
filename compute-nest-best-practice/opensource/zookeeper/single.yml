ROSTemplateFormatVersion: '2015-09-01'
Description:
  zh-cn: 此模板用于自动化部署Zookeeper集群至阿里云ECS，涵盖付费方式、网络配置、安全组管理、存储设置及实例规格定制，并通过用户数据脚本安装Java与Zookeeper，支持公网访问与私有网络配置。
  en: This template facilitates the automated deployment of a Zookeeper cluster on
    Alibaba Cloud Elastic Compute Service (ECS), encompassing payment options, network
    configurations, security group management, storage setups, and instance specification
    customization. It leverages user data scripts to install Java and Zookeeper, ensuring
    support for both public access and private network configurations.
Conditions:
  IfAllocatePublicIp:
    Fn::Equals:
    - Ref: AllocatePublicIp
    - true
  IfAutoCreateSecurityGroup:
    Fn::Equals:
    - Ref: AutoCreateSecurityGroup
    - true
Parameters:
  PayType:
    Type: String
    Label:
      en: ECS Instance Charge Type
      zh-cn: 付费类型
    AssociationProperty: ChargeType
    AssociationPropertyMetadata:
      LocaleKey: InstanceChargeType
    Default: PostPaid
    AllowedValues:
    - PostPaid
    - PrePaid
  PayPeriodUnit:
    Type: String
    Label:
      en: Pay Period Unit
      zh-cn: 购买资源时长周期
    AssociationProperty: PayPeriodUnit
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${PayType}
            - PostPaid
    Default: Month
    AllowedValues:
    - Month
    - Year
  PayPeriod:
    Type: Number
    Label:
      en: Period
      zh-cn: 购买资源时长
    Description:
      en: When the resource purchase duration is Month, the value of Period ranges
        from 1 to 9, 12, 24, 36, 48, or 60. <br><b><font color='red'> When ECS instance
        types are PrePaid valid </b></font>
      zh-cn: 当购买资源时长为Month时，Period取值：1~9 <br><b><font color='red'>当ECS实例类型为PrePaid有效</b></font>
    AssociationProperty: PayPeriod
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
            - ${PayType}
            - PostPaid
    Default: 1
    AllowedValues:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
  ZoneId:
    Type: String
    Label:
      en: VSwitch Availability Zone
      zh-cn: 交换机可用区
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
  VpcId:
    Type: String
    Label:
      en: VPC ID
      zh-cn: 专有网络VPC实例ID
    Description:
      en: Please search the ID starting with (vpc-xxx) from console-Virtual Private
        Cloud
      zh-cn: 现有虚拟专有网络的实例ID
    AssociationProperty: ALIYUN::ECS::VPC::VPCId
  VSwitchId:
    Type: String
    Label:
      en: VSwitch ID
      zh-cn: 交换机实例ID
    Description:
      en: Instance ID of existing business network switches, console-Virtual Private
        Cloud-VSwitches under query
      zh-cn: 现有业务网络交换机的实例ID
    AssociationProperty: ALIYUN::ECS::VSwitch::VSwitchId
    AssociationPropertyMetadata:
      VpcId: ${VpcId}
      ZoneId: ${ZoneId}
  AutoCreateSecurityGroup:
    Type: Boolean
    Label:
      zh-cn: 自动创建安全组
      en: auto create security group
    Default: true
  SecurityGroupId:
    Type: String
    Label:
      en: Business Security Group ID
      zh-cn: 业务安全组ID
    Description:
      en: Please search the business security group ID starting with(sg-xxx)from console-ECS-Network
        & Security
      zh-cn: 现有业务安全组的实例ID
    AssociationProperty: ALIYUN::ECS::SecurityGroup::SecurityGroupId
    AssociationPropertyMetadata:
      VpcId: ${VpcId}
      Visible:
        Condition:
          Fn::Equals:
          - ${AutoCreateSecurityGroup}
          - false
    Default: ''
  EcsInstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例类型
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      ZoneId: ${ZoneId}
      InstanceChargeType: ${InstanceChargeType}
  SystemDiskSize:
    Type: Number
    Label:
      zh-cn: 系统盘空间
      en: System Disk Space
    Description:
      zh-cn: 系统盘大小, 取值范围：[40, 500], 单位：GB。
      en: 'System disk size of each node, range of values: 40-500, units: GB.'
    Default: 40
    MinValue: 40
    MaxValue: 500
  DataDiskSize:
    Type: Number
    Label:
      zh-cn: 数据盘空间
      en: Data Disk Space
    Description:
      zh-cn: 数据盘大小, 取值范围：[40, 500], 单位：GB。
      en: 'System disk size of each node, range of values: 40-500, units: GB.'
    Default: 40
    MinValue: 40
    MaxValue: 500
  InstancePassword:
    Type: String
    Label:
      en: Instance Password
      zh-cn: 实例密码
    Description:
      en: Server login password, Length 8-30, must contain three(Capital letters,
        lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol
        in)
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, numbers,
        ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    AssociationProperty: ALIYUN::ECS::Instance::Password
    AllowedPattern: '[0-9A-Za-z\_\-\&:;''<>,=%`~!@#\(\)\$\^\*\+\|\{\}\[\]\.\?\/]+$'
    MinLength: 8
    MaxLength: 30
    NoEcho: true
  AllocatePublicIp:
    Type: Boolean
    Label:
      zh-cn: 开启公网IP
      en: allocate public ip
    Default: false
  InternetChargeType:
    Type: String
    Label:
      zh-cn: 流量付费类型
      en: Internet Charge Type
    AssociationPropertyMetadata:
      LocaleKey: InternetChargeType
      Visible:
        Condition:
          Fn::Equals:
          - ${AllocatePublicIp}
          - true
    Default: PayByTraffic
    AllowedValues:
    - PayByBandwidth
    - PayByTraffic
  InternetMaxBandwidthOut:
    Type: Number
    Label:
      zh-cn: 流量公网带宽
      en: Internet Max Bandwidth Out
    Description:
      zh-cn: 取值范围0-100, 0为不开公网ip
      en: no public ip if zero
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Equals:
          - ${AllocatePublicIp}
          - true
    Default: 0
    MinValue: 0
    MaxValue: 100
Resources:
  EcsSecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Condition: IfAutoCreateSecurityGroup
    Properties:
      VpcId:
        Ref: VpcId
      SecurityGroupName:
        Ref: ALIYUN::StackName
      SecurityGroupEgress:
      - PortRange: -1/-1
        Priority: 1
        IpProtocol: all
        DestCidrIp: 0.0.0.0/0
        NicType: intranet
      SecurityGroupIngress:
        Fn::If:
        - IfAllocatePublicIp
        - - PortRange: 2181/2181
            Priority: 1
            SourceCidrIp: 0.0.0.0/0
            IpProtocol: tcp
            NicType: internet
        - Ref: ALIYUN::NoValue
  WaitConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  WaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Count: 1
      Handle:
        Ref: WaitConditionHandle
      Timeout: 300
  EcsInstanceGroup:
    Type: ALIYUN::ECS::InstanceGroup
    Properties:
      ZoneId:
        Ref: ZoneId
      VpcId:
        Ref: VpcId
      VSwitchId:
        Ref: VSwitchId
      SecurityGroupId:
        Fn::If:
        - IfAutoCreateSecurityGroup
        - Ref: EcsSecurityGroup
        - Ref: SecurityGroupId
      ImageId: centos_7
      InstanceName:
        Fn::Join:
        - '-'
        - - Ref: ALIYUN::StackName
          - '[1,4]'
      IoOptimized: optimized
      InstanceChargeType:
        Ref: PayType
      PeriodUnit:
        Ref: PayPeriodUnit
      Period:
        Ref: PayPeriod
      SystemDiskCategory: cloud_essd
      SystemDiskSize:
        Ref: SystemDiskSize
      DiskMappings:
      - Category: cloud_essd
        Size:
          Ref: DataDiskSize
      MaxAmount: 1
      InstanceType:
        Ref: EcsInstanceType
      Password:
        Ref: InstancePassword
      AllocatePublicIP:
        Ref: AllocatePublicIp
      InternetMaxBandwidthOut:
        Fn::If:
        - IfAllocatePublicIp
        - Ref: InternetMaxBandwidthOut
        - 0
      InternetChargeType:
        Ref: InternetChargeType
      UserData:
        Fn::Sub:
        - |
          #!/bin/bash
          # 挂盘到/data
          cat >> /root/InitDataDisk.sh << "EOF"
          #!/bin/bash
          echo "p
          n
          p



          w
          " |  fdisk -u /dev/vdb
          EOF
          /bin/bash /root/InitDataDisk.sh
          rm -f /root/InitDataDisk.sh
          mkfs -t ext4 /dev/vdb1
          cp /etc/fstab /etc/fstab.bak
          mkdir /data
          echo `blkid /dev/vdb1 | awk '{print $2}' | sed 's/\\\"//g'` /data ext4 defaults 0 0 >> /etc/fstab
          mount -a


          # 这里配置安装脚本
          yum install -y java
          wget '{{ computenest::file::zookeeper }}'
          tar xvf apache-zookeeper-3.8.1-bin.tar.gz && mv apache-zookeeper-3.8.1-bin /opt/
          ln -s /opt/apache-zookeeper-3.8.1-bin /opt/zookeeper

          groupadd zookeeper
          useradd -g zookeeper zookeeper -s /bin/bash
          chown -R zookeeper:zookeeper /opt/zookeeper
          mkdir /data/zookeeper
          chown -R zookeeper:zookeeper /data/zookeeper
          chown -R zookeeper:zookeeper /opt/apache-zookeeper-3.8.1-bin
          cd /opt/zookeeper/

          cat >> conf/zoo.cfg << "EOF"
          tickTime=2000
          dataDir=/data/zookeeper
          clientPort=2181
          EOF

          cat >> /usr/lib/systemd/system/zookeeper.service << "EOF"
          [Unit]
          Description=Zookeeper Service unit Configuration
          After=network.target

          [Service]
          Type=forking
          Environment=JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.362.b08-1.el7_9.x86_64
          ExecStart=/opt/zookeeper/bin/zkServer.sh start /opt/zookeeper/conf/zoo.cfg
          ExecStop=/opt/zookeeper/bin/zkServer.sh stop
          PIDFile=/data/zookeeper/zookeeper_server.pid
          KillMode=none
          User=zookeeper
          Group=zookeeper
          Restart=on-failure
          [Install]
          WantedBy=multi-user.target
          EOF

          systemctl daemon-reload

          # 配置启动脚本
          systemctl enable zookeeper
          systemctl start zookeeper

          # 执行成功回调WaitCondition结束waitCondition的等待
          ${CurlCli} -d "{\"Data\" : \"Success\", \"status\" : \"SUCCESS\"}"
        - CurlCli:
            Fn::GetAtt:
            - WaitConditionHandle
            - CurlCli
          RegionId:
            Ref: ALIYUN::Region
Outputs:
  PrivateEndpoint:
    Description:
      zh-cn: 内网IP地址
      en: Private IP Addresses
    Value:
      Fn::Sub:
      - zookeeper://${ServerAddress}:2181
      - ServerAddress:
          Fn::Select:
          - 0
          - Fn::GetAtt:
            - EcsInstanceGroup
            - PrivateIps
  PublicEndpoint:
    Description:
      zh-cn: 对外暴露的公网IP地址
      en: Public IP Addresses
    Condition: IfAllocatePublicIp
    Value:
      Fn::Sub:
      - zookeeper://${ServerAddress}:2181
      - ServerAddress:
          Fn::Select:
          - 0
          - Fn::GetAtt:
            - EcsInstanceGroup
            - PublicIps
  InstallPath:
    Description:
      zh-cn: 安装路径
      en: Install Path
    Value: /opt/zookeeper
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - PayType
      - PayPeriodUnit
      - PayPeriod
      Label:
        default:
          en: PayType Configuration
          zh-cn: 付费类型配置
    - Parameters:
      - ZoneId
      Label:
        default:
          zh-cn: 可用区配置
          en: Zone Configuration
    - Parameters:
      - VpcId
      - VSwitchId
      - AutoCreateSecurityGroup
      - SecurityGroupId
      Label:
        default:
          zh-cn: 选择已有基础资源配置
          en: Choose existing Infrastructure Configuration
    - Parameters:
      - EcsInstanceType
      - SystemDiskSize
      - DataDiskSize
      - InstancePassword
      Label:
        default:
          en: Instance Configuration
          zh-cn: ECS实例配置
    - Parameters:
      - AllocatePublicIp
      - InternetChargeType
      - InternetMaxBandwidthOut
      Label:
        default:
          en: Network Configurate
          zh-cn: ECS网络配置
