ROSTemplateFormatVersion: '2015-09-01'
Description:
  zh-cn: 单节点Docker部署Harbor 2.1.0，含用户管理、访问控制及审计，配置ECS、安全组及自动安装脚本，支持公网访问。
  en: Single-node Docker deployment of Harbor 2.1.0, encompassing user management,
    access control, and auditing functionalities. Configured with Elastic Cloud Server
    (ECS), Security Groups, and an automated installation script for enhanced accessibility,
    it also facilitates public network access.
Parameters:
  VSwitchZoneId:
    Type: String
    Label:
      en: VSwitch Availability Zone
      zh-cn: 交换机可用区
    Description:
      en: Availability Zone ID.<br><b>note：<font color='blue'>before selecting, please
        confirm that the Availability Zone supports the specification of creating
        ECS resources,which is recommended to be different from other VSwitch Availability
        Zone</font></b>
      zh-cn: 可用区ID。<br><b>注： <font color='blue'>选择前请确认该可用区是否支持创建ECS资源的规格，建议与其他交换机可用区不同</font></b>
    AssociationProperty: ALIYUN::ECS::Instance:ZoneId
  VPC:
    Type: String
    Label:
      en: Existing VPC Instance ID
      zh-cn: 现有VPC的实例ID
    Description:
      en: Please search the ID starts with (vpc-xxx)from console-Virtual Private Cloud
      zh-cn: 现有虚拟专有网络的实例ID,控制台-VPC-专有网络下查询
    AssociationProperty: ALIYUN::ECS::VPC::VPCId
  VSwitch:
    Type: String
    Label:
      en: Existing VSwitch ID
      zh-cn: 网络交换机ID
    Description:
      en: Please search the business VSwitch ID starts with(vsw-xxx)from console-Virtual
        Private Cloud-VSwitches
      zh-cn: 现有业务网络交换机的实例ID,控制台-VPC-专有网络-交换机下查询
    AssociationProperty: ALIYUN::ECS::VSwitch::VSwitchId
    AssociationPropertyMetadata:
      VpcId: VPC
      ZoneId: VSwitchZoneId
  SecurityGroup:
    Type: String
    Label:
      en: Business Security Group ID
      zh-cn: 业务安全组ID
    Description:
      en: Please search the business security group ID starting with(sg-xxx)from console-ECS-Network
        & Security
      zh-cn: 现有业务安全组的实例ID,控制台-ECS-网络与安全-安全组下查询
    AssociationProperty: ALIYUN::ECS::SecurityGroup::SecurityGroupId
    AssociationPropertyMetadata:
      VpcId: VPC
  InstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例规格
    Description:
      en: It is recommended that the memory be at least 2GB RAM.
      zh-cn: 内存推荐至少2GB RAM。
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      InstanceChargeType: PostPaid
      SystemDiskCategory: cloud_essd
      ZoneId: VSwitchZoneId
      Constraints:
        Memory:
          - 2
          - 4
          - 6
          - 8
          - 10
  SystemDiskCategory:
    Type: String
    Label:
      en: System Disk Category
      zh-cn: 系统盘类型
    AssociationProperty: ALIYUN::ECS::Disk::SystemDiskCategory
    AssociationPropertyMetadata:
      LocaleKey: DiskCategory
      InstanceType: ${InstanceType}
  SystemDiskSize:
    Type: Number
    Label:
      en: System Disk Space
      zh-cn: 系统盘空间
    Description:
      en: 'System disk size, range of values: 20-500, units: GB.'
      zh-cn: 系统盘大小, 取值范围：[20, 500], 单位：GB。
    Default: 20
  Password:
    Type: String
    NoEcho: true
    Label:
      en: Instance Password
      zh-cn: 实例密码
    Description:
      en: Server login password, Length 8-30, must contain three(Capital letters,
        lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol
        in).
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）。
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, numbers,
        ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in).
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）。
    AssociationProperty: 'ALIYUN::ECS::Instance::Password'
  HarborAdminPassword:
    Type: String
    Label:
      en: Harbor Admin User Password
      zh-cn: Harbor Admin用户密码
    Description:
      en: Harbor Web Admin User login password, Length 8-30.
      zh-cn: Harbor Web Admin用户登录密码,长度8-30。
    MinLength: 8
    MaxLength: 30
    NoEcho: true
Resources:
  HarborServer:
    Type: ALIYUN::ECS::InstanceGroup
    Properties:
      ZoneId:
        Ref: VSwitchZoneId
      VpcId:
        Ref: VPC
      VSwitchId:
        Ref: VSwitch
      SecurityGroupId:
        Ref: SecurityGroup
      ImageId: centos_7
      AllocatePublicIP: true
      InstanceName: HarborServer
      InstanceType:
        Ref: InstanceType
      MaxAmount: 1
      Password:
        Ref: Password
      SystemDiskCategory:
        Ref: SystemDiskCategory
      SystemDiskSize:
        Ref: SystemDiskSize
  InstanceRunCommand:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
        Fn::GetAtt:
          - HarborServer
          - InstanceIds
      CommandContent:
        Fn::Sub: |-
          #!/bin/bash
          export ROS_DEPLOY=true
          HarborAdminPassword=${HarborAdminPassword}
          InstallDocker() {
              yum update -y
              sudo yum groupinstall -y 'Development Tools'
              sudo yum install -y python3-devel libffi-devel
              yum install -y yum-utils
              yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
              yum makecache fast
              yum -y install docker-ce
              systemctl enable docker
              systemctl start docker
              pip3 install docker-compose==1.18.0
          }
          
          DownloadHarborPackage() {
              cd /home
              local max_retries=3
              local retry=0
              local file="harbor-online-installer-v2.1.0.tgz"
          
              while [ $retry -lt $max_retries ]; do
                  if [ -f "$file" ]; then
                      echo "$file 已经存在，跳过下载。"
                      break
                  else
                      echo "尝试下载 $file，第 $((retry + 1)) 次..."
                      wget https://github.com/goharbor/harbor/releases/download/v2.1.0/harbor-online-installer-v2.1.0.tgz
                      if [ $? -eq 0 ]; then
                          echo "下载成功。"
                          break
                      else
                          echo "下载失败，准备重试..."
                          retry=$((retry + 1))
                          sleep 10
                      fi
                  fi
              done
          
              if [ $retry -eq $max_retries ]; then
                  echo "错误：经过 $max_retries 次尝试后，仍然无法下载 $file。"
                  exit 1
              fi
              tar xvf harbor-online-installer-v2.1.0.tgz
          }
          
          SetDockerRegistry() {
              echo "{" >> /etc/docker/daemon.json
              echo '     "registry-mirrors": ["https://ly7y5sh7.mirror.aliyuncs.com"]' >> /etc/docker/daemon.json
              echo "}" >> /etc/docker/daemon.json
              systemctl daemon-reload
              systemctl restart docker
          }
          
          SetHarborConfig() {
              HostIP=`ifconfig eth0 | awk '/inet /{print $2}'`
              cp /home/harbor/harbor.yml.tmpl  /home/harbor/harbor.yml
              sed -i "s%hostname:.*%hostname: $HostIP%g" /home/harbor/harbor.yml
              sed -i "s%https:.*%#https:%g" /home/harbor/harbor.yml
              sed -i "s%port: 443%#port: 443%g" /home/harbor/harbor.yml
              sed -i "s%certificate: /your/certificate/path%#certificate: /your/certificate/path%g" /home/harbor/harbor.yml
              sed -i "s%private_key: /your/private/key/path%#private_key: /your/private/key/path%g" /home/harbor/harbor.yml
              sed -i "s%harbor_admin_password:.*%harbor_admin_password: ${HarborAdminPassword}%g" /home/harbor/harbor.yml
          }
          
          InstallHarbor() {
              /home/harbor/prepare
              /home/harbor/install.sh
          }
          
          main() {
              InstallDocker
              SetDockerRegistry
              DownloadHarborPackage
              SetHarborConfig
              InstallHarbor
          }
          
          main
          netstat -ntlp | grep 80 >> /tmp/access.log
          if [[ $? -eq 0 ]];
          then
               ${WaitConditionHandle.CurlCli} --data-binary '{"status": "SUCCESS"}'
          else
              ${WaitConditionHandle.CurlCli} --data-binary '{"status": "FAILURE"}'
          fi

      Type: RunShellScript
      Timeout: '2400'
      Sync: true
  WaitConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  WaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Count: 1
      Handle:
        Ref: WaitConditionHandle
      Timeout: 1800
Outputs:
  HarborServerWebUrl:
    Value:
      Fn::Sub:
      - http://${HarborServerAddress}
      - HarborServerAddress:
          Fn::Select:
          - '0'
          - Fn::GetAtt:
            - HarborServer
            - PublicIps
  HarborWebUser:
    Value: admin
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - VSwitchZoneId
      - VPC
      - VSwitch
      - SecurityGroup
      Label:
        default:
          en: Infrastructure Configuration
          zh-cn: 基础资源配置（必填）
    - Parameters:
      - InstanceType
      - SystemDiskCategory
      - SystemDiskSize
      - Password
      - HarborAdminPassword
      Label:
        default:
          en: Harbor Configuration
          zh-cn: Harbor 配置
    TemplateTags:
    - acs:example:容器:Harbor单机版(已有VPC)
  ALIYUN::ROS::Composer:
    8d3edd41:
      Rect:
        - 608
        - 470
        - 40
        - 100
        - 1
        - 0
      ResT: Composer::ROSParameter::AlibabaCloud
    13ba485c:
      Parent: 8d3edd41
      Rect:
        - 572
        - 400
        - 60
        - 150
        - 2
        - 0
      ResT: Composer::ROSParameter::Region
    51e88e89:
      Res:
        - WaitCondition
      Parent: 13ba485c
      Rect:
        - 40
        - 40
        - 563
        - 200
        - 3
        - 0
    28bab70c:
      Res:
        - VPC
      Parent: 13ba485c
      Rect:
        - 440
        - 270
        - 80
        - 200
        - 3
        - 0
      ResT: ALIYUN::ECS::VPC
    7b3264b4:
      Res:
        - WaitConditionHandle
      Parent: 13ba485c
      Rect:
        - 40
        - 40
        - 563
        - 390
        - 3
        - 0
    d2a49af8:
      Res:
        - VSwitch
      Parent: 28bab70c
      Rect:
        - 400
        - 200
        - 100
        - 250
        - 4
        - 0
      ResT: ALIYUN::ECS::VSwitch
    bab64e43:
      Res:
        - HarborServer
      Parent: d2a49af8
      Rect:
        - 40
        - 40
        - 280
        - 330
        - 5
        - 0
    c4858b4c:
      Parent: 13ba485c
      Edge:
        - 51e88e89
        - 7b3264b4
      Line: 0:0:0:gray:0

